<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<workflow xmlns="http://vmware.com/vco/workflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd"
	root-name="item1" object-name="Workflow:name=generic"
	id="c750de68-2d65-459e-b7ed-283ffc11d60f" version="0.1.3"
	api-version="3.1.0" allowed-operations="vef" restartMode="1"
	resumeFromFailedMode="0">
	<display-name><![CDATA[VS Creation Using Single Action]]></display-name>
	<position y="50.0" x="100.0"></position>
	<input>
		<param name="Name" type="string">
			<description><![CDATA[Add virtualservice name]]></description>
		</param>
		<param name="controller" type="string">
			<description><![CDATA[AVI Controller(AVI controller on which resources to be deployed).]]></description>
		</param>
		<param name="IPAddress" type="string">
			<description><![CDATA[Add virtualservice IP address]]></description>
		</param>
		<param name="PoolServers"
			type="Array/CompositeType(IP:string,Ratio:string,Port:string):AVIServer">
			<description><![CDATA[Server details]]></description>
		</param>
		<param name="ApplicationProfile" type="string">
			<description><![CDATA[Select Application profile]]></description>
		</param>
		<param name="servicePort" type="string">
			<description><![CDATA[Specify VS service port]]></description>
		</param>
		<param name="SSLCertificate" type="string">
			<description><![CDATA[Select the Certificate]]></description>
		</param>
		<param name="SSLCert" type="boolean">
			<description><![CDATA[SSL]]></description>
		</param>
		<param name="lbAlgorithm" type="string">
			<description><![CDATA[Pool LB algorithm type]]></description>
		</param>
		<param name="serverType" type="string">
			<description><![CDATA[server Type]]></description>
		</param>
		<param name="poolOrPoolgroup" type="boolean">
			<description><![CDATA[Check for create pool or poolgroup]]></description>
		</param>
		<param name="vsVIP" type="boolean">
			<description><![CDATA[Add existig shared VIP]]></description>
		</param>
		<param name="existingVIP" type="string"></param>
	</input>
	<attrib name="aviVroClient" type="Avi:AviVroClient"
		read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
		<description><![CDATA[Avi Vro Client]]></description>
	</attrib>
	<attrib name="virtualServiceData" type="string"
		read-only="false">
		<value encoded="n"><![CDATA[]]>
		</value>
		<description><![CDATA[virtual service data]]></description>
	</attrib>
	<attrib name="CertName" type="string" read-only="false">
		<value encoded="n"><![CDATA[]]>
		</value>
		<description><![CDATA[cert name]]></description>
	</attrib>
	<attrib name="vsVipName" type="string" read-only="false">
		<value encoded="n"><![CDATA[]]>
		</value>
		<description><![CDATA[vsvip name]]></description>
	</attrib>
	<attrib name="poolName" type="string" read-only="false">
		<value encoded="n"><![CDATA[]]>
		</value>
		<description><![CDATA[Set the pool name]]></description>
	</attrib>
	<attrib name="enabled" type="boolean" read-only="false">
		<value encoded="n"><![CDATA[true]]></value>
		<description><![CDATA[Enabled]]></description>
	</attrib>
	<attrib name="eastWestPlacement" type="boolean"
		read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<attrib name="aviAllocatedFIp" type="boolean" read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
		<description><![CDATA[Allocate FIP]]></description>
	</attrib>
	<attrib name="autoAllocateIp" type="boolean" read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
		<description><![CDATA[Auto allocate IP for vsvip]]></description>
	</attrib>
	<attrib name="autoAllocateFloatingIp" type="boolean"
		read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
		<description><![CDATA[Auto allocate floating IP]]></description>
	</attrib>
	<attrib name="aviAllocatedVip" type="boolean" read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
		<description><![CDATA[Allocated Vip]]></description>
	</attrib>
	<workflow-item name="item0" type="end" end-mode="0">
		<position y="45.40909090909091" x="524.5"></position>
	</workflow-item>
	<workflow-item name="item1" out-name="item2" type="task">
		<display-name><![CDATA[initWorkflow]]></display-name>
		<script encoded="false"><![CDATA[vsVipName = Name+"_vsvip"
poolName = Name+"_pool"
var vroClientArray=Server.findAllForType('Avi:AviVroClient','');
var aviVroClient= null;
for each(avivroObj in vroClientArray){
	if(avivroObj !=null){
		vroController=avivroObj.cred.controller;
		if(vroController==controller){
				aviVroClient= avivroObj;
			}
		}	
	}
System.log("aviVroClient : "+aviVroClient)
//aviVroClient = AviVroPlugin.connect(controller, username, password, Tenant, version)



]]></script>
		<in-binding>
			<bind name="CertName" type="string" export-name="CertName"></bind>
			<bind name="Name" type="string" export-name="Name">
				<description><![CDATA[Add virtualservice name]]></description>
			</bind>
			<bind name="poolName" type="string" export-name="poolName"></bind>
			<bind name="controller" type="string" export-name="controller"></bind>
		</in-binding>
		<out-binding>
			<bind name="CertName" type="string" export-name="CertName"></bind>
			<bind name="poolName" type="string" export-name="poolName"></bind>
			<bind name="vsVipName" type="string" export-name="vsVipName"></bind>
			<bind name="aviVroClient" type="Avi:AviVroClient"
				export-name="aviVroClient"></bind>
		</out-binding>
		<position y="55.40909090909091" x="184.5"></position>
	</workflow-item>
	<workflow-item name="item2" out-name="item0" type="task"
		script-module="com.vmware.avi/virtualServiceinOne">
		<display-name><![CDATA[virtualServiceinOne]]></display-name>
		<script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.avi").virtualServiceinOne(loadBalancerAlgo,enablePool,poolName,PoolServers,serverType,eastWestPlacement,vsVipName,aviAllocatedFIp,autoAllocateIp,enabled,autoAllocateFloatingIp,aviAllocatedVip,IPAddress,aviVroClient,SSLCertificate,servicePort,Name,ApplicationProfile,poolOrPoolgroup,SSLCert,existingVIP,vsVIP) ;]]></script>
		<in-binding>
			<bind name="autoAllocateFloatingIp" type="boolean"
				export-name="autoAllocateFloatingIp"></bind>
			<bind name="autoAllocateIp" type="boolean"
				export-name="autoAllocateIp"></bind>
			<bind name="aviAllocatedFIp" type="boolean"
				export-name="aviAllocatedFIp"></bind>
			<bind name="aviAllocatedVip" type="boolean"
				export-name="aviAllocatedVip"></bind>
			<bind name="aviVroClient" type="Avi:AviVroClient"
				export-name="aviVroClient"></bind>
			<bind name="eastWestPlacement" type="boolean"
				export-name="eastWestPlacement"></bind>
			<bind name="enabled" type="boolean" export-name="enabled"></bind>
			<bind name="enablePool" type="boolean" export-name="enabled"></bind>
			<bind name="IPAddress" type="string" export-name="IPAddress"></bind>
			<bind name="loadBalancerAlgo" type="string"
				export-name="lbAlgorithm"></bind>
			<bind name="Name" type="string" export-name="Name"></bind>
			<bind name="poolName" type="string" export-name="poolName"></bind>
			<bind name="PoolServers"
				type="Array/CompositeType(IP:string,Ratio:string,Port:string):AVIServer"
				export-name="PoolServers"></bind>
			<bind name="serverType" type="string" export-name="serverType"></bind>
			<bind name="poolOrPoolgroup" type="boolean"
				export-name="poolOrPoolgroup">
				<description><![CDATA[Check for create pool or poolgroup]]></description>
			</bind>
			<bind name="SSLCert" type="boolean" export-name="SSLCert">
				<description><![CDATA[SSL]]></description>
			</bind>
			<bind name="servicePort" type="string" export-name="servicePort">
				<description><![CDATA[Specify VS service port]]></description>
			</bind>
			<bind name="SSLCertificate" type="string"
				export-name="SSLCertificate">
				<description><![CDATA[Select the Certificate]]></description>
			</bind>
			<bind name="vsVipName" type="string" export-name="vsVipName">
				<description><![CDATA[vsvip name]]></description>
			</bind>
			<bind name="ApplicationProfile" type="string"
				export-name="ApplicationProfile"></bind>
			<bind name="existingVIP" type="string" export-name="existingVIP"></bind>
			<bind name="vsVIP" type="boolean" export-name="vsVIP"></bind>
		</in-binding>
		<out-binding>
			<bind name="actionResult" type="String"
				export-name="virtualServiceData"></bind>
		</out-binding>
		<position y="55.40909090909091" x="324.5"></position>
	</workflow-item>
	<presentation>
		<p-step>
			<title><![CDATA[Basic details]]></title>
			<p-param name="controller">
				<desc><![CDATA[AVI controller]]></desc>
				<p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
				<p-qual kind="ognl" name="genericEnumeration"
					type="Array/string"><![CDATA[GetAction("com.vmware.avi","getVROControllerList").call()]]></p-qual>
			</p-param>
		</p-step>
		<p-step>
			<title><![CDATA[VS details]]></title>
			<p-param name="Name">
				<desc><![CDATA[Virtualservice name]]></desc>
				<p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
			</p-param>
			<p-param name="ApplicationProfile">
				<desc><![CDATA[Select application type]]></desc>
				<p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string##;#string#HTTP#;#string#HTTPS#;#string#L4#;#string#L4 SSL/TLS#}#]]></p-qual>
			</p-param>
			<p-param name="vsVIP">
				<desc><![CDATA[Add existig VIP]]></desc>
				<p-qual kind="static" name="defaultValue" type="boolean"><![CDATA[__NULL__]]></p-qual>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
			</p-param>
			<p-param name="existingVIP">
				<desc><![CDATA[existingVIP]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#vsVIP == true]]></p-qual>
				<p-qual kind="static" name="defaultValue" type="string"><![CDATA[true]]></p-qual>
			</p-param>
			<p-param name="IPAddress">
				<desc><![CDATA[Add VS IP]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#vsVIP == false]]></p-qual>
				<p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.avi","readvROResourceElements").call( "IPAddress" , #ApplicationProfile , #resourceElement )]]></p-qual>
				<p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
			</p-param>
			<p-param name="SSLCert">
				<desc><![CDATA[Enable SSL ]]></desc>
				<p-qual kind="ognl" name="dataBinding" type="boolean"><![CDATA[#ApplicationProfile == "HTTPS" || #ApplicationProfile == "L4 SSL/TLS" ? true : false]]></p-qual>
				<p-qual kind="static" name="defaultValue" type="boolean"><![CDATA[false]]></p-qual>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
			</p-param>
			<p-param name="SSLCertificate">
				<desc><![CDATA[Select certificate]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#SSLCert==true]]></p-qual>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#CreateSSL==true || #SSLCert==false]]></p-qual>
				<p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.avi","getSSLCertificate").call(controller, username, password, tenant, version)]]></p-qual>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#System-Default-Cert#;#string#System-Default-Cert-EC#}#]]></p-qual>
			</p-param>
			<p-param name="servicePort">
				<desc><![CDATA[Specify VS service port]]></desc>
				<p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[#ApplicationProfile == "HTTP" || #ApplicationProfile == "L4" ? "80" : "443"]]></p-qual>
			</p-param>
			<p-param name="poolOrPoolgroup">
				<desc><![CDATA[Create poolgroup]]></desc>
				<p-qual kind="static" name="defaultValue" type="boolean"><![CDATA[__NULL__]]></p-qual>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
			</p-param>
		</p-step>
		<p-step>
			<title><![CDATA[SSL cert]]></title>
			<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#CreateSSL==true]]></p-qual>
			<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#SSLCert==true || #SSLCert==false || #CreateSSL==false ]]></p-qual>
		</p-step>
		<p-step>
			<title><![CDATA[Pool details]]></title>
			<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
			<p-param name="lbAlgorithm">
				<desc><![CDATA[Pool LB algorithm type]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#poolOrPoolgrous != true]]></p-qual>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#Least Connections#;#string#Round Robin#;#string#Least Load#;#string#Fewest Servers#;#string#Consistent Hash#;#string#Fastest Response#;#string#Core Affinity#}#]]></p-qual>
				<p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.avi`","readvROResourceElements").call( "lbAlgorithm" , #ApplicationProfile , #resourceElement )]]></p-qual>
			</p-param>
		</p-step>
		<p-step>
			<title><![CDATA[Server details]]></title>
			<p-param name="PoolServers">
				<desc><![CDATA[Select servers to add]]></desc>
				<p-qual kind="ognl" name="dataBinding"
					type="Array/CompositeType(IP:string,Ratio:string,Port:string):AVIServer"><![CDATA[GetAction("com.vmware.avi","fetchServerIP").call( #controller , #Tenant , #AddServers , #IPGroup , #Network , #AddExistingServerIPs )]]></p-qual>
			</p-param>
			<p-param name="serverType">
				<desc><![CDATA[server Type]]></desc>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
				<p-qual kind="static" name="defaultValue" type="string"><![CDATA[V4]]></p-qual>
			</p-param>
		</p-step>
	</presentation>
</workflow>