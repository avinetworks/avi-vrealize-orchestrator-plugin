<?xml version="1.0" encoding="UTF-8"?>
<workflow xmlns="http://vmware.com/vco/workflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd"
	root-name="item6" object-name="workflow:name=generic"
	id="069621f3-0be2-4ceb-98ae-ba1b6c35c354" version="0.1.7"
	api-version="6.0.0" allowed-operations="vef" restartMode="1"
	resumeFromFailedMode="0">
	<display-name><![CDATA[VS creation using action for each object]]></display-name>
  <position y="9.545454545454543" x="5.0"></position>
  <input>
    <param name="Name" type="string">
      <description><![CDATA[Add virtualservice name]]></description>
    </param>
    <param name="IPAddress" type="string">
      <description><![CDATA[Add virtualservice IP address]]></description>
    </param>
    <param name="controller" type="string">
      <description><![CDATA[AVI Controller(AVI controller on which resources to be deployed).]]></description>
    </param>
    <param name="ServerCloud" type="string">
      <description><![CDATA[Select Cloud Server Type]]></description>
    </param>
    <param name="PoolServers" type="Array/CompositeType(IP:string,Ratio:string,Port:string):AVIServer">
      <description><![CDATA[Server details]]></description>
    </param>
    <param name="CreateHealthMonitor" type="boolean">
      <description><![CDATA[Create HealthMonitor]]></description>
    </param>
    <param name="healthMonitor" type="Array/string">
      <description><![CDATA[Select the HealthMonitor]]></description>
    </param>
    <param name="ApplicationProfile" type="string">
      <description><![CDATA[Select Application profile]]></description>
    </param>
    <param name="servicePort" type="string">
      <description><![CDATA[Specify VS service port]]></description>
    </param>
    <param name="SSLCertificate" type="string">
      <description><![CDATA[Select the Certificate]]></description>
    </param>
    <param name="SSLCert" type="boolean">
      <description><![CDATA[SSL ]]></description>
    </param>
    <param name="CreateSSL" type="boolean">
      <description><![CDATA[Create New SSL Certificate]]></description>
    </param>
    <param name="AddServers" type="string">
      <description><![CDATA[How would you like to add Servers?]]></description>
    </param>
    <param name="IPGroup" type="string">
      <description><![CDATA[IP Group]]></description>
    </param>
    <param name="Network" type="string">
      <description><![CDATA[Type IP Address or Select by Network]]></description>
    </param>
    <param name="AddExistingServerIPs" type="boolean">
      <description><![CDATA[Check existing server IP]]></description>
    </param>
    <param name="PGNames" type="string">
      <description><![CDATA[Network PG names]]></description>
    </param>
    <param name="serviceEngine" type="string">
      <description><![CDATA[Name of service engine group]]></description>
    </param>
    <param name="failActionType" type="string">
      <description><![CDATA[Failactiontype for poolgroup]]></description>
    </param>
    <param name="poolOrPoolgroups" type="boolean">
      <description><![CDATA[Check for create pool or poolgroup]]></description>
    </param>
    <param name="lbAlgorithm" type="string">
      <description><![CDATA[Pool LB algorithm type]]></description>
    </param>
    <param name="lbConsistentHash" type="string">
      <description><![CDATA[Load balancer consistent hash]]></description>
    </param>
    <param name="lbCustomHeaderName" type="string">
      <description><![CDATA[Load balancer custom header name]]></description>
    </param>
    <param name="vsVIP" type="boolean">
      <description><![CDATA[Add Existing Shared VIP]]></description>
    </param>
    <param name="existingVIP" type="string">
      <description><![CDATA[Select Existing Shared Vs-VIP]]></description>
    </param>
    <param name="serverType" type="string">
      <description><![CDATA[Server Type]]></description>
    </param>
    <param name="resourceElement" type="ResourceElement">
      <description><![CDATA[Add resource element ]]></description>
    </param>
    <param name="statusCode" type="string">
      <description><![CDATA[Status code for failaction type of poolgroup]]></description>
    </param>
    <param name="statusProtocol" type="string">
      <description><![CDATA[Protocol for failaction type of poolgroup]]></description>
    </param>
    <param name="failActionURL" type="string">
      <description><![CDATA[Redirect url for failaction type]]></description>
    </param>
    <param name="monitorType" type="string">
      <description><![CDATA[Healthmonitor type ]]></description>
    </param>
    <param name="Command" type="string">
      <description><![CDATA[Command code for  external type healthmonitor]]></description>
    </param>
    <param name="Request" type="string">
      <description><![CDATA[Command code for  UDP type healthmonitor]]></description>
    </param>
    <param name="DNSData" type="string">
      <description><![CDATA[Command code for DNS type healthmonitor]]></description>
    </param>
    <param name="ResponseCode" type="Array/string">
      <description><![CDATA[Respose code for HTTP type healthmonitor]]></description>
    </param>
    <param name="HTTPSResponse" type="Array/string">
      <description><![CDATA[Respose code for HTTPS type healthmonitor]]></description>
    </param>
    <param name="Tenant" type="string">
      <description><![CDATA[Tenant]]></description>
    </param>
  </input>
  <attrib name="configErrorCode" type="string" read-only="false">
    <value encoded="n"><![CDATA[
		]]></value>
  </attrib>
  <attrib name="actionEerrorCode" type="string" read-only="false">
    <value encoded="n"><![CDATA[
		]]></value>
  </attrib>
  <attrib name="poolgroupName" type="string" read-only="false">
    <value encoded="n"><![CDATA[
		]]></value>
    <description><![CDATA[Set the poolgroup name]]></description>
  </attrib>
  <attrib name="enabled" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[true]]></value>
    <description><![CDATA[Enabled]]></description>
  </attrib>
  <attrib name="createPoolError" type="string" read-only="false">
    <value encoded="n"><![CDATA[
		]]></value>
  </attrib>
  <attrib name="configJSONError" type="string" read-only="false">
    <value encoded="n"><![CDATA[
		]]></value>
  </attrib>
  <attrib name="HealthMonitorName" type="string" read-only="false">
    <value encoded="n"><![CDATA[
		]]></value>
    <description><![CDATA[Set the healthmonitor name ]]></description>
  </attrib>
  <attrib name="CertName" type="string" read-only="false">
    <value encoded="n"><![CDATA[
		]]></value>
    <description><![CDATA[Set the SSL certificate name]]></description>
  </attrib>
  <attrib name="version" type="string" read-only="false">
    <value encoded="n"><![CDATA[18.2.8]]></value>
    <description><![CDATA[AVI api version]]></description>
  </attrib>
  <attrib name="poolName" type="string" read-only="false">
    <value encoded="n"><![CDATA[
		]]></value>
    <description><![CDATA[Set the pool name]]></description>
  </attrib>
  <attrib name="serverTimeout" type="number" read-only="false">
    <value encoded="n"><![CDATA[0.0]]></value>
  </attrib>
  <attrib name="requestQueueEnabled" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="domainName" type="string" read-only="false">
    <value encoded="n"><![CDATA[
		]]></value>
  </attrib>
  <attrib name="sniEnabled" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="capacityEstimationThresh" type="number" read-only="false">
    <value encoded="n"><![CDATA[0.0]]></value>
  </attrib>
  <attrib name="hostCheckEnabled" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="maxConcurrentConnectionsPerServer" type="number" read-only="false">
    <value encoded="n"><![CDATA[0.0]]></value>
  </attrib>
  <attrib name="upstreamConnpoolConnMaxReuse" type="number" read-only="false">
    <value encoded="n"><![CDATA[0.0]]></value>
  </attrib>
  <attrib name="capacityEstimation" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="gracefulDisableTimeout" type="number" read-only="false">
    <value encoded="n"><![CDATA[10.0]]></value>
  </attrib>
  <attrib name="upstreamConnpoolConnIdleTmo" type="number" read-only="false">
    <value encoded="n"><![CDATA[0.0]]></value>
  </attrib>
  <attrib name="deleteServerRefresh" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="fewestTasksFeedbackDelay" type="number" read-only="false">
    <value encoded="n"><![CDATA[1.0]]></value>
  </attrib>
  <attrib name="cloudConfigCksum" type="string" read-only="false">
    <value encoded="n"><![CDATA[""]]></value>
  </attrib>
  <attrib name="connectionRampDuration" type="number" read-only="false">
    <value encoded="n"><![CDATA[0.0]]></value>
  </attrib>
  <attrib name="useServicePort" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="upstreamConnpoolConnLifeTmo" type="number" read-only="false">
    <value encoded="n"><![CDATA[0.0]]></value>
  </attrib>
  <attrib name="lookupServerByName" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="rewriteHostHeaderServerName" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="enableRealtimeMetrics" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="upstreamConnpoolServerMaxCache" type="number" read-only="false">
    <value encoded="n"><![CDATA[0.0]]></value>
  </attrib>
  <attrib name="clientStringRef" type="string" read-only="false">
    <value encoded="n"><![CDATA[
		]]></value>
  </attrib>
  <attrib name="logAllClientHeaders" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="trafficEnabled" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="nslThrottle" type="string" read-only="false">
    <value encoded="n"><![CDATA[""]]></value>
  </attrib>
  <attrib name="metricsRealtimeUpdateDuration" type="number" read-only="false">
    <value encoded="n"><![CDATA[0.0]]></value>
  </attrib>
  <attrib name="excludeURL" type="string" read-only="false">
    <value encoded="n"><![CDATA[""]]></value>
  </attrib>
  <attrib name="scaleoutEcmp" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="description" type="string" read-only="false">
    <value encoded="n"><![CDATA[
		]]></value>
  </attrib>
  <attrib name="enableRhiSnat" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="nslduration" type="string" read-only="false">
    <value encoded="n"><![CDATA[""]]></value>
  </attrib>
  <attrib name="enableAutogw" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="useBridgeIpAsVip" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="nonSignificantLogs" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="closeClientConfigUpdate" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="clientIpAddr" type="string" read-only="false">
    <value encoded="n"><![CDATA[""]]></value>
  </attrib>
  <attrib name="enabledClientLog" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="metricsRealtimeUpdate" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="clientInsights" type="string" read-only="false">
    <value encoded="n"><![CDATA[No Insights]]></value>
  </attrib>
  <attrib name="eastWestPlacement" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="udfLogThrottle" type="number" read-only="false">
    <value encoded="n"><![CDATA[0.0]]></value>
  </attrib>
  <attrib name="ignPoolNetReach" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="addClientLogFliter" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="significantLogThrottle" type="number" read-only="false">
    <value encoded="n"><![CDATA[0.0]]></value>
  </attrib>
  <attrib name="includeURL" type="string" read-only="false">
    <value encoded="n"><![CDATA[""]]></value>
  </attrib>
  <attrib name="enableRhi" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="allowInvalidClientCert" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="analyticsProfile" type="string" read-only="false">
    <value encoded="n"><![CDATA[System-Analytics-Profile]]></value>
  </attrib>
  <attrib name="clientDuration" type="number" read-only="false">
    <value encoded="n"><![CDATA[0.0]]></value>
  </attrib>
  <attrib name="useVipAsSnat" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="removeListeningPortOnVsDown" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
  </attrib>
  <attrib name="maxCpsPerClient" type="number" read-only="false">
    <value encoded="n"><![CDATA[10.0]]></value>
  </attrib>
  <attrib name="activePassiveHM" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
    <description><![CDATA[Active Passive healthmonitor]]></description>
  </attrib>
  <attrib name="hmData" type="string" read-only="false">
    <value encoded="n"><![CDATA[
		]]></value>
  </attrib>
  <attrib name="poolData" type="string" read-only="false">
    <value encoded="n"><![CDATA[
		]]></value>
  </attrib>
  <attrib name="virtualServiceData" type="string" read-only="false">
    <value encoded="n"><![CDATA[
		]]></value>
  </attrib>
  <attrib name="vsVipData" type="string" read-only="false">
    <value encoded="n"><![CDATA[
		]]></value>
  </attrib>
  <attrib name="vsVipName" type="string" read-only="false">
    <value encoded="n"><![CDATA[
		]]></value>
  </attrib>
  <attrib name="autoAllocateIp" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
    <description><![CDATA[Auto allocate IP for vsvip]]></description>
  </attrib>
  <attrib name="autoAllocateFloatingIp" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
    <description><![CDATA[Auto allocate floating IP]]></description>
  </attrib>
  <attrib name="aviAllocatedFIp" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
    <description><![CDATA[Allocate FIP]]></description>
  </attrib>
  <attrib name="aviAllocatedVip" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
    <description><![CDATA[Allocate VIP]]></description>
  </attrib>
  <attrib name="failedChecks" type="number" read-only="false">
    <value encoded="n"><![CDATA[2.0]]></value>
    <description><![CDATA[Failed checks]]></description>
  </attrib>
  <attrib name="maintenanceResponse" type="string" read-only="false">
    <value encoded="n"><![CDATA[""]]></value>
    <description><![CDATA[Maintenance server response data for tcp monitor]]></description>
  </attrib>
  <attrib name="tcpRequest" type="string" read-only="false">
    <value encoded="n"><![CDATA[""]]></value>
    <description><![CDATA[Client request data for tcp monitor]]></description>
  </attrib>
  <attrib name="tcpResponse" type="string" read-only="false">
    <value encoded="n"><![CDATA[""]]></value>
    <description><![CDATA[Server response data  for tcp monitor]]></description>
  </attrib>
  <attrib name="tcpHalfOpen" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
    <description><![CDATA[Half-Open (Close connection before completion) ]]></description>
  </attrib>
  <attrib name="successfulChecks" type="number" read-only="false">
    <value encoded="n"><![CDATA[2.0]]></value>
    <description><![CDATA[Add successful checks]]></description>
  </attrib>
  <attrib name="sendInterval" type="number" read-only="false">
    <value encoded="n"><![CDATA[10.0]]></value>
    <description><![CDATA[Add send interval]]></description>
  </attrib>
  <attrib name="receiveTimeout" type="number" read-only="false">
    <value encoded="n"><![CDATA[4.0]]></value>
    <description><![CDATA[Add receive timeout]]></description>
  </attrib>
  <attrib name="monitorPort" type="number" read-only="false">
    <value encoded="n"><![CDATA[90.0]]></value>
    <description><![CDATA[Add monitor port]]></description>
  </attrib>
  <attrib name="isFederated" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
    <description><![CDATA[Add is_federated ]]></description>
  </attrib>
  <attrib name="aviVroClient" type="Avi:AviVroClient" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
  </attrib>
  <workflow-item name="item0" throw-bind-name="actionEerrorCode" type="end" end-mode="0">
    <position y="72.68181818181817" x="524.5"></position>
  </workflow-item>
  <workflow-item name="item6" out-name="item4" throw-bind-name="configErrorCode" type="task">
    <display-name><![CDATA[AVIObjectName]]></display-name>
    <script encoded="false"><![CDATA[HealthMonitorName = Name+"_HealthMonitor"
vsVipName = Name+"_vsvip"
poolName = Name+"_pool"
//aviVroClient = AviVroPlugin.connect(controller, username, password, Tenant, version)
vroClientArray=Server.findAllForType('Avi:AviVroClient','');
var aviVroClient= null;
for each(avivroObj in vroClientArray){
	if(avivroObj !=null){
		vroController=avivroObj.cred.controller;
		if(vroController==controller){
				aviVroClient= avivroObj;
			}
		}	
	}
Tenant=aviVroClient.cred.tenant;


]]></script>
    <in-binding>
      <bind name="Name" type="string" export-name="Name">
        <description><![CDATA[Add virtualservice name]]></description>
      </bind>
      <bind name="HealthMonitorName" type="string" export-name="HealthMonitorName"></bind>
      <bind name="CertName" type="string" export-name="CertName"></bind>
      <bind name="poolgroupName" type="string" export-name="poolgroupName"></bind>
      <bind name="poolName" type="string" export-name="poolName"></bind>
      <bind name="controller" type="string" export-name="controller"></bind>
      <bind name="Tenant" type="string" export-name="Tenant"></bind>
      <bind name="version" type="string" export-name="version"></bind>
    </in-binding>
    <out-binding>
      <bind name="HealthMonitorName" type="string" export-name="HealthMonitorName"></bind>
      <bind name="CertName" type="string" export-name="CertName"></bind>
      <bind name="poolgroupName" type="string" export-name="poolgroupName"></bind>
      <bind name="poolName" type="string" export-name="poolName"></bind>
      <bind name="vsVipName" type="string" export-name="vsVipName"></bind>
      <bind name="aviVroClient" type="Avi:AviVroClient" export-name="aviVroClient"></bind>
    </out-binding>
    <position y="19.045454545454543" x="85.0"></position>
  </workflow-item>
  <workflow-item name="item1" out-name="item2" throw-bind-name="configJSONError" type="task" script-module="com.vmware.avi/createVirtualService">
    <display-name><![CDATA[createVirtualService]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.avi").createVirtualService(Name,poolgroupName,ServerCloud,Tenant,ApplicationProfile,servicePort,SSLCertificate,SSLCert,CertName,CreateSSL,serviceEngine,poolOrPoolgroup,poolName,vsVIP,existingVIP,allowInvalidClientCert,closeClientConfigUpdate,description,enableAutogw,enableRhi,enableRhiSnat,ignPoolNetReach,removeListeningPortOnVsDown,scaleoutEcmp,clientIpAddr,includeURL,excludeURL,addClientLogFliter,enabledClientLog,clientStringRef,clientDuration,logAllClientHeaders,analyticsProfile,clientInsights,significantLogThrottle,udfLogThrottle,nonSignificantLogs,nslduration,nslThrottle,metricsRealtimeUpdate,metricsRealtimeUpdateDuration,maxCpsPerClient,trafficEnabled,useBridgeIpAsVip,useVipAsSnat,vsVipName,aviVroClient) ;]]></script>
    <in-binding>
      <bind name="addClientLogFliter" type="boolean" export-name="addClientLogFliter"></bind>
      <bind name="allowInvalidClientCert" type="boolean" export-name="allowInvalidClientCert"></bind>
      <bind name="analyticsProfile" type="string" export-name="analyticsProfile"></bind>
      <bind name="ApplicationProfile" type="string" export-name="ApplicationProfile"></bind>
      <bind name="CertName" type="string" export-name="CertName"></bind>
      <bind name="clientDuration" type="number" export-name="clientDuration"></bind>
      <bind name="clientInsights" type="string" export-name="clientInsights"></bind>
      <bind name="clientIpAddr" type="string" export-name="clientIpAddr"></bind>
      <bind name="clientStringRef" type="string" export-name="clientStringRef"></bind>
      <bind name="closeClientConfigUpdate" type="boolean" export-name="closeClientConfigUpdate"></bind>
      <bind name="CreateSSL" type="boolean" export-name="CreateSSL"></bind>
      <bind name="description" type="string" export-name="description"></bind>
      <bind name="enableAutogw" type="boolean" export-name="enableAutogw"></bind>
      <bind name="enabledClientLog" type="boolean" export-name="enabledClientLog"></bind>
      <bind name="enableRhi" type="boolean" export-name="enableRhi"></bind>
      <bind name="enableRhiSnat" type="boolean" export-name="enableRhiSnat"></bind>
      <bind name="excludeURL" type="string" export-name="excludeURL"></bind>
      <bind name="existingVIP" type="string" export-name="existingVIP"></bind>
      <bind name="ignPoolNetReach" type="boolean" export-name="ignPoolNetReach"></bind>
      <bind name="includeURL" type="string" export-name="includeURL"></bind>
      <bind name="logAllClientHeaders" type="boolean" export-name="logAllClientHeaders"></bind>
      <bind name="maxCpsPerClient" type="number" export-name="maxCpsPerClient"></bind>
      <bind name="metricsRealtimeUpdate" type="boolean" export-name="metricsRealtimeUpdate"></bind>
      <bind name="metricsRealtimeUpdateDuration" type="number" export-name="metricsRealtimeUpdateDuration"></bind>
      <bind name="Name" type="string" export-name="Name"></bind>
      <bind name="nonSignificantLogs" type="boolean" export-name="nonSignificantLogs"></bind>
      <bind name="nslduration" type="string" export-name="nslduration"></bind>
      <bind name="nslThrottle" type="string" export-name="nslThrottle"></bind>
      <bind name="poolgroupName" type="string" export-name="poolgroupName"></bind>
      <bind name="poolName" type="string" export-name="poolName"></bind>
      <bind name="poolOrPoolgroup" type="boolean" export-name="poolOrPoolgroups"></bind>
      <bind name="removeListeningPortOnVsDown" type="boolean" export-name="removeListeningPortOnVsDown"></bind>
      <bind name="scaleoutEcmp" type="boolean" export-name="scaleoutEcmp"></bind>
      <bind name="ServerCloud" type="string" export-name="ServerCloud"></bind>
      <bind name="serviceEngine" type="string" export-name="serviceEngine"></bind>
      <bind name="servicePort" type="string" export-name="servicePort"></bind>
      <bind name="significantLogThrottle" type="number" export-name="significantLogThrottle"></bind>
      <bind name="SSLCert" type="boolean" export-name="SSLCert"></bind>
      <bind name="SSLCertificate" type="string" export-name="SSLCertificate"></bind>
      <bind name="Tenant" type="string" export-name="Tenant"></bind>
      <bind name="trafficEnabled" type="boolean" export-name="trafficEnabled"></bind>
      <bind name="udfLogThrottle" type="number" export-name="udfLogThrottle"></bind>
      <bind name="useBridgeIpAsVip" type="boolean" export-name="useBridgeIpAsVip"></bind>
      <bind name="useVipAsSnat" type="boolean" export-name="useVipAsSnat"></bind>
      <bind name="vsVIP" type="boolean" export-name="vsVIP"></bind>
      <bind name="vsVipName" type="string" export-name="vsVipName"></bind>
      <bind name="aviVroClient" type="Avi:AviVroClient" export-name="aviVroClient"></bind>
      <bind name="Tenant1" type="string" export-name="Tenant">
        <description><![CDATA[Tenant]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="actionResult" type="Avi:AviVroClient" export-name="aviVroClient"></bind>
    </out-binding>
    <position y="19.045454545454543" x="344.5"></position>
  </workflow-item>
  <workflow-item name="item15" out-name="item3" throw-bind-name="createPoolError" type="task" script-module="com.vmware.avi/createPool">
    <display-name><![CDATA[createPool]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.avi").createPool(PoolServers,enablePool,CreateHealthMonitor,poolName,defaultServerPort,loadBalancerAlgo,serverType,lbConsistentHash,lbCustomHeaderName,ServerCloud,Tenant,HealthMonitorName,healthMonitor,Version,activePassiveHM,capacityEstimation,capacityEstimationThresh,cloudConfigCksum,deleteServerRefresh,gracefulDisableTimeout,hostCheckEnabled,lookupServerByName,rewriteHostHeaderServerName,maxConcurrentConnectionsPerServer,domainName,fewestTasksFeedbackDelay,connectionRampDuration,upstreamConnpoolConnIdleTmo,upstreamConnpoolConnLifeTmo,upstreamConnpoolConnMaxReuse,upstreamConnpoolServerMaxCache,requestQueueEnabled,useServicePort,sniEnabled,serverTimeout,enableRealtimeMetrics,statusCode,failActionURL,statusProtocol,failActiontype,aviVroClient) ;]]></script>
    <in-binding>
      <bind name="PoolServers" type="Array/CompositeType(IP:string,Ratio:string,Port:string):AVIServer" export-name="PoolServers"></bind>
      <bind name="enablePool" type="boolean" export-name="enabled"></bind>
      <bind name="CreateHealthMonitor" type="boolean" export-name="CreateHealthMonitor"></bind>
      <bind name="poolName" type="string" export-name="poolName"></bind>
      <bind name="defaultServerPort" type="string" export-name="servicePort"></bind>
      <bind name="loadBalancerAlgo" type="string" export-name="lbAlgorithm"></bind>
      <bind name="serverType" type="string" export-name="serverType"></bind>
      <bind name="lbConsistentHash" type="string" export-name="lbConsistentHash"></bind>
      <bind name="lbCustomHeaderName" type="string" export-name="lbCustomHeaderName"></bind>
      <bind name="ServerCloud" type="string" export-name="ServerCloud"></bind>
      <bind name="Tenant" type="string" export-name="Tenant"></bind>
      <bind name="HealthMonitorName" type="string" export-name="HealthMonitorName"></bind>
      <bind name="healthMonitor" type="Array/string" export-name="healthMonitor"></bind>
      <bind name="Version" type="string" export-name="version"></bind>
      <bind name="activePassiveHM" type="boolean" export-name="activePassiveHM"></bind>
      <bind name="serverTimeout" type="number" export-name="serverTimeout"></bind>
      <bind name="requestQueueEnabled" type="boolean" export-name="requestQueueEnabled"></bind>
      <bind name="statusCode" type="string" export-name="statusCode"></bind>
      <bind name="domainName" type="string" export-name="domainName"></bind>
      <bind name="sniEnabled" type="boolean" export-name="sniEnabled"></bind>
      <bind name="capacityEstimationThresh" type="number" export-name="capacityEstimationThresh"></bind>
      <bind name="hostCheckEnabled" type="boolean" export-name="hostCheckEnabled"></bind>
      <bind name="maxConcurrentConnectionsPerServer" type="number" export-name="maxConcurrentConnectionsPerServer"></bind>
      <bind name="statusProtocol" type="string" export-name="statusProtocol"></bind>
      <bind name="failActiontype" type="string" export-name="failActionType"></bind>
      <bind name="failActionURL" type="string" export-name="failActionURL"></bind>
      <bind name="upstreamConnpoolConnMaxReuse" type="number" export-name="upstreamConnpoolConnMaxReuse"></bind>
      <bind name="capacityEstimation" type="boolean" export-name="capacityEstimation"></bind>
      <bind name="gracefulDisableTimeout" type="number" export-name="gracefulDisableTimeout"></bind>
      <bind name="deleteServerRefresh" type="boolean" export-name="deleteServerRefresh"></bind>
      <bind name="upstreamConnpoolConnIdleTmo" type="number" export-name="upstreamConnpoolConnIdleTmo"></bind>
      <bind name="fewestTasksFeedbackDelay" type="number" export-name="fewestTasksFeedbackDelay"></bind>
      <bind name="cloudConfigCksum" type="string" export-name="cloudConfigCksum"></bind>
      <bind name="connectionRampDuration" type="number" export-name="connectionRampDuration"></bind>
      <bind name="useServicePort" type="boolean" export-name="useServicePort"></bind>
      <bind name="upstreamConnpoolConnLifeTmo" type="number" export-name="upstreamConnpoolConnLifeTmo"></bind>
      <bind name="lookupServerByName" type="boolean" export-name="lookupServerByName"></bind>
      <bind name="rewriteHostHeaderServerName" type="boolean" export-name="rewriteHostHeaderServerName"></bind>
      <bind name="enableRealtimeMetrics" type="boolean" export-name="enableRealtimeMetrics"></bind>
      <bind name="upstreamConnpoolServerMaxCache" type="number" export-name="upstreamConnpoolServerMaxCache"></bind>
      <bind name="aviVroClient" type="Avi:AviVroClient" export-name="aviVroClient"></bind>
    </in-binding>
    <out-binding>
      <bind name="actionResult" type="Avi:AviVroClient" export-name="aviVroClient"></bind>
    </out-binding>
    <position y="82.68181818181817" x="224.5"></position>
  </workflow-item>
  <workflow-item name="item2" out-name="item0" type="task">
    <display-name><![CDATA[createObject]]></display-name>
    <script encoded="false"><![CDATA[controllerIP = aviVroClient.getCred();
resp = aviVroClient.executeWorkflow();
System.log("Object Created Successfully.");
]]></script>
    <in-binding>
      <bind name="controller" type="string" export-name="controller"></bind>
      <bind name="hmData" type="string" export-name="hmData"></bind>
      <bind name="poolData" type="string" export-name="poolData"></bind>
      <bind name="virtualServiceData" type="string" export-name="virtualServiceData"></bind>
      <bind name="vsVipData" type="string" export-name="vsVipData"></bind>
      <bind name="aviVroClient" type="Avi:AviVroClient" export-name="aviVroClient"></bind>
      <bind name="vsVIP" type="boolean" export-name="vsVIP">
        <description><![CDATA[Add Existing Shared VIP]]></description>
      </bind>
    </in-binding>
    <out-binding></out-binding>
    <position y="19.045454545454543" x="484.5"></position>
  </workflow-item>
  <workflow-item name="item3" out-name="item1" type="task" script-module="com.vmware.avi/createVsVIP">
    <display-name><![CDATA[createVsVIP]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.avi").createVsVIP(Tenant,name,IPAddress,eastWestPlacement,aviAllocatedFIp,autoAllocateIp,enabled,autoAllocateFloatingIp,aviAllocatedVip,serverType,aviVroClient) ;]]></script>
    <in-binding>
      <bind name="autoAllocateFloatingIp" type="boolean" export-name="autoAllocateFloatingIp"></bind>
      <bind name="autoAllocateIp" type="boolean" export-name="autoAllocateIp"></bind>
      <bind name="aviAllocatedFIp" type="boolean" export-name="aviAllocatedFIp"></bind>
      <bind name="aviAllocatedVip" type="boolean" export-name="aviAllocatedVip"></bind>
      <bind name="eastWestPlacement" type="boolean" export-name="eastWestPlacement">
        <description><![CDATA[Add east west  placement]]></description>
      </bind>
      <bind name="enabled" type="boolean" export-name="enabled"></bind>
      <bind name="IPAddress" type="string" export-name="IPAddress">
        <description><![CDATA[Vs vip IP address]]></description>
      </bind>
      <bind name="name" type="string" export-name="vsVipName">
        <description><![CDATA[Vs vip name]]></description>
      </bind>
      <bind name="serverType" type="string" export-name="serverType"></bind>
      <bind name="Tenant" type="string" export-name="Tenant">
        <description><![CDATA[Tenant name]]></description>
      </bind>
      <bind name="aviVroClient" type="Avi:AviVroClient" export-name="aviVroClient"></bind>
    </in-binding>
    <out-binding>
      <bind name="actionResult" type="Avi:AviVroClient" export-name="aviVroClient"></bind>
    </out-binding>
    <position y="82.68181818181817" x="344.5"></position>
  </workflow-item>
  <workflow-item name="item4" out-name="item15" type="task" script-module="com.vmware.avi/createHealthMonitor">
    <display-name><![CDATA[createHealthmonitor]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.avi").createHealthMonitor(Tenant,monitorType,HealthMonitorName,Command,Request,DNSData,ResponseCode,HTTPSResponse,isFederated,monitorPort,receiveTimeout,sendInterval,successfulChecks,Description,tcpHalfOpen,tcpResponse,tcpRequest,maintenanceResponse,failedChecks,aviVroClient) ;]]></script>
    <in-binding>
      <bind name="Tenant" type="string" export-name="Tenant">
        <description><![CDATA[Tenant name]]></description>
      </bind>
      <bind name="monitorType" type="string" export-name="monitorType">
        <description><![CDATA[Healthmonitor type ]]></description>
      </bind>
      <bind name="HealthMonitorName" type="string" export-name="HealthMonitorName">
        <description><![CDATA[Healthmonitor name]]></description>
      </bind>
      <bind name="Command" type="string" export-name="Command">
        <description><![CDATA[Command code for  external type healthmonitor]]></description>
      </bind>
      <bind name="Request" type="string" export-name="Request">
        <description><![CDATA[Command code for  UDP type healthmonitor]]></description>
      </bind>
      <bind name="DNSData" type="string" export-name="DNSData">
        <description><![CDATA[Command code for DNS type healthmonitor]]></description>
      </bind>
      <bind name="ResponseCode" type="Array/string" export-name="ResponseCode">
        <description><![CDATA[Respose code for HTTP type healthmonitor]]></description>
      </bind>
      <bind name="HTTPSResponse" type="Array/string" export-name="HTTPSResponse">
        <description><![CDATA[Respose code for HTTPS type healthmonitor]]></description>
      </bind>
      <bind name="isFederated" type="boolean" export-name="isFederated">
        <description><![CDATA[Add is_federated ]]></description>
      </bind>
      <bind name="monitorPort" type="number" export-name="monitorPort">
        <description><![CDATA[Add monitor port]]></description>
      </bind>
      <bind name="receiveTimeout" type="number" export-name="receiveTimeout">
        <description><![CDATA[Add receive timeout]]></description>
      </bind>
      <bind name="sendInterval" type="number" export-name="sendInterval">
        <description><![CDATA[Add send interval]]></description>
      </bind>
      <bind name="successfulChecks" type="number" export-name="successfulChecks">
        <description><![CDATA[Add successful checks]]></description>
      </bind>
      <bind name="Description" type="string" export-name="description">
        <description><![CDATA[Add description for healthmonitor]]></description>
      </bind>
      <bind name="tcpHalfOpen" type="boolean" export-name="tcpHalfOpen">
        <description><![CDATA[Half-Open (Close connection before completion) ]]></description>
      </bind>
      <bind name="tcpResponse" type="string" export-name="tcpResponse">
        <description><![CDATA[Server response data  for tcp monitor]]></description>
      </bind>
      <bind name="tcpRequest" type="string" export-name="tcpRequest">
        <description><![CDATA[Client request data for tcp monitor]]></description>
      </bind>
      <bind name="maintenanceResponse" type="string" export-name="maintenanceResponse">
        <description><![CDATA[Maintenance server response data for tcp monitor]]></description>
      </bind>
      <bind name="failedChecks" type="number" export-name="failedChecks">
        <description><![CDATA[Failed checks]]></description>
      </bind>
      <bind name="aviVroClient" type="Avi:AviVroClient" export-name="aviVroClient"></bind>
    </in-binding>
    <out-binding>
      <bind name="actionResult" type="Avi:AviVroClient" export-name="aviVroClient"></bind>
    </out-binding>
    <position y="19.045454545454543" x="224.5"></position>
  </workflow-item>
  <presentation>
    <p-step>
      <title><![CDATA[Basic details]]></title>
      <p-param name="controller">
        <desc><![CDATA[AVI controller]]></desc>
        <p-qual kind="ognl" name="genericEnumeration" type="Array/string"><![CDATA[GetAction("com.vmware.avi","getVROControllerList").call()]]></p-qual>
      </p-param>
      <p-param name="Tenant">
        <desc><![CDATA[Tenant]]></desc>
        <p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
      </p-param>
      <p-param name="resourceElement">
        <desc><![CDATA[Select default values]]></desc>
        <p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
      </p-param>
      <p-param name="ServerCloud">
        <desc><![CDATA[Select cloud]]></desc>
        <p-qual kind="ognl" name="defaultValue" type="string"><![CDATA["Default-Cloud"]]></p-qual>
      </p-param>
    </p-step>
    <p-step>
      <title><![CDATA[VS details]]></title>
      <p-param name="Name">
        <desc><![CDATA[Virtualservice name]]></desc>
        <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
      </p-param>
      <p-param name="ApplicationProfile">
        <desc><![CDATA[Select application type]]></desc>
        <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
        <p-qual kind="static" name="genericEnumeration" type="Array/string"><![CDATA[#{#string##;#string#HTTP#;#string#HTTPS#;#string#TCP#;#string#UDP#}#]]></p-qual>
      </p-param>
      <p-param name="vsVIP">
        <desc><![CDATA[Add existing VIP]]></desc>
        <p-qual kind="static" name="defaultValue" type="boolean"><![CDATA[false]]></p-qual>
      </p-param>
      <p-param name="existingVIP">
        <desc><![CDATA[Select existing VIP]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#vsVIP == true]]></p-qual>
        <p-qual kind="ognl" name="defaultValue" type="string"><![CDATA[true]]></p-qual>
      </p-param>
      <p-param name="IPAddress">
        <desc><![CDATA[Add VS IP]]></desc>
        <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#vsVIP == false]]></p-qual>
        <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.avi","readvROResourceElements").call( "IPAddress" , #ApplicationProfile , #resourceElement )]]></p-qual>
      </p-param>
      <p-param name="serviceEngine">
        <desc><![CDATA[Select servicengine group]]></desc>
        <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.avi","readvROResourceElements").call( "serviceEngine" , #ApplicationProfile , #resourceElement )]]></p-qual>
        <p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
      </p-param>
      <p-param name="SSLCert">
        <desc><![CDATA[Enable SSL ]]></desc>
        <p-qual kind="ognl" name="dataBinding" type="boolean"><![CDATA[#ApplicationProfile == "HTTPS" ? true : false ]]></p-qual>
        <p-qual kind="static" name="defaultValue" type="boolean"><![CDATA[false]]></p-qual>
        <p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
      </p-param>
      <p-param name="CreateSSL">
        <desc><![CDATA[Create SSL certificate]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#SSLCert==true]]></p-qual>
        <p-qual kind="ognl" name="dataBinding" type="boolean"><![CDATA[GetAction("com.vmware.avi","readvROResourceElements").call( "CreateSSL" , #ApplicationProfile , #resourceElement )]]></p-qual>
      </p-param>
      <p-param name="SSLCertificate">
        <desc><![CDATA[Select certificate]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#SSLCert==true]]></p-qual>
        <p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#CreateSSL==true || #SSLCert==false]]></p-qual>
        <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.avi","readvROResourceElements").call( "SSLCertificate" , #ApplicationProfile , #resourceElement )]]></p-qual>
        <p-qual kind="static" name="genericEnumeration" type="Array/string"><![CDATA[#{#string#System-Default-Cert#;#string#System-Default-Cert-EC#}#]]></p-qual>
      </p-param>
      <p-param name="servicePort">
        <desc><![CDATA[Add VS service port]]></desc>
        <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[#ApplicationProfile == "HTTP" ? "80" : "443"]]></p-qual>
      </p-param>
      <p-param name="poolOrPoolgroups">
        <desc><![CDATA[Create poolgroup]]></desc>
        <p-qual kind="static" name="defaultValue" type="boolean"><![CDATA[false]]></p-qual>
        <p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
      </p-param>
    </p-step>
    <p-step>
      <title><![CDATA[SSL Cert]]></title>
      <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#CreateSSL==true]]></p-qual>
      <p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#SSLCert==false || #CreateSSL==false]]></p-qual>
    </p-step>
    <p-step>
      <title><![CDATA[PG details]]></title>
      <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#poolOrPoolgroups == true]]></p-qual>
      <p-param name="failActionType">
        <desc><![CDATA[Fail action type]]></desc>
        <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.avi","readvROResourceElements").call( "failActionType" , #ApplicationProfile , #resourceElement )]]></p-qual>
        <p-qual kind="static" name="genericEnumeration" type="Array/string"><![CDATA[#{#string#Close Connection#;#string#HTTP Redirect#}#]]></p-qual>
      </p-param>
      <p-param name="statusCode">
        <desc><![CDATA[Select status code]]></desc>
        <p-qual kind="static" name="genericEnumeration" type="Array/string"><![CDATA[#{#string#301#;#string#302#;#string#307#}#]]></p-qual>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#failActionType=="HTTP Redirect"]]></p-qual>
      </p-param>
      <p-param name="statusProtocol">
        <desc><![CDATA[Add protocol]]></desc>
        <p-qual kind="static" name="genericEnumeration" type="Array/string"><![CDATA[#{#string#HTTP#;#string#HTTPS#}#]]></p-qual>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#failActionType=="HTTP Redirect"]]></p-qual>
      </p-param>
      <p-param name="failActionURL">
        <desc><![CDATA[URL for redirect]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#failActionType=="HTTP Redirect"]]></p-qual>
      </p-param>
    </p-step>
    <p-step>
      <title><![CDATA[Pool details]]></title>
      <p-param name="lbAlgorithm">
        <desc><![CDATA[Select pool LB algorithm]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#poolOrPoolgrous != true]]></p-qual>
        <p-qual kind="static" name="genericEnumeration" type="Array/string"><![CDATA[#{#string#Least Connections#;#string#Round Robin#;#string#Least Load#;#string#Fewest Servers#;#string#Consistent Hash#;#string#Fastest Response#;#string#Core Affinity#}#]]></p-qual>
        <p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.avi","readvROResourceElements").call( "lbAlgorithm" , #ApplicationProfile , #resourceElement )]]></p-qual>
      </p-param>
      <p-param name="lbConsistentHash">
        <desc><![CDATA[Load balancer consistent hash]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#lbAlgorithm == "Consistent Hash "]]></p-qual>
        <p-qual kind="static" name="genericEnumeration" type="Array/string"><![CDATA[#{#string#Source IP Address #;#string#Source IP Address And Port #;#string#Callid#;#string#URI #;#string#Custom String#;#string#Custom Header#}#]]></p-qual>
      </p-param>
      <p-param name="lbCustomHeaderName">
        <desc><![CDATA[Load balancer custom header name]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#lbConsistentHash == "Custom Header"]]></p-qual>
      </p-param>
      <p-param name="CreateHealthMonitor">
        <desc><![CDATA[Create healthmonitor]]></desc>
        <p-qual kind="static" name="defaultValue" type="boolean"><![CDATA[false]]></p-qual>
      </p-param>
      <p-param name="healthMonitor">
        <desc><![CDATA[Select healthmonitors]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[false]]></p-qual>
        <p-qual kind="static" name="defaultValue" type="Array/string"><![CDATA[#{#string#System-Ping#}#]]></p-qual>
      </p-param>
    </p-step>
    <p-step>
      <title><![CDATA[Healthmonitor details]]></title>
      <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#CreateHealthMonitor != false]]></p-qual>
      <p-param name="monitorType">
        <desc><![CDATA[Healthmonitor type ]]></desc>
        <p-qual kind="static" name="genericEnumeration" type="Array/string"><![CDATA[#{#string#TCP#;#string#HTTPS#;#string#External#;#string#UDP#;#string#DNS#;#string#HTTP#;#string#Ping#}#]]></p-qual>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#CreateHealthMonitor==true ]]></p-qual>
      </p-param>
      <p-param name="Command">
        <desc><![CDATA[Command code for  external type healthmonitor]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#monitorType=="External"]]></p-qual>
      </p-param>
      <p-param name="Request">
        <desc><![CDATA[Command code for  UDP type healthmonitor]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#monitorType=="UDP"]]></p-qual>
      </p-param>
      <p-param name="DNSData">
        <desc><![CDATA[Command code for DNS type healthmonitor]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#monitorType=="DNS"]]></p-qual>
      </p-param>
      <p-param name="ResponseCode">
        <desc><![CDATA[Respose code for HTTP type healthmonitor]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#monitorType=="HTTP"]]></p-qual>
        <p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#monitorType!="HTTP" || #CreateHealthMonitor==false]]></p-qual>
        <p-qual kind="static" name="genericEnumeration" type="Array/string"><![CDATA[#{#string#1XX#;#string#2XX#;#string#3XX#;#string#4XX#;#string#5XX#;#string#ANY#}#]]></p-qual>
      </p-param>
      <p-param name="HTTPSResponse">
        <desc><![CDATA[Respose code for HTTPS type healthmonitor]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#monitorType=="HTTPS"]]></p-qual>
        <p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#monitorType!="HTTPS" || #CreateHealthMonitor==false]]></p-qual>
        <p-qual kind="static" name="genericEnumeration" type="Array/Array/string"><![CDATA[#{#string#1XX#;#string#2XX#;#string#3XX#;#string#4XX#;#string#5XX#;#string#ANY#}#]]></p-qual>
      </p-param>
    </p-step>
    <p-step>
      <title><![CDATA[Server details]]></title>
      <p-param name="AddServers">
        <desc><![CDATA[Connect servers]]></desc>
        <p-qual kind="static" name="genericEnumeration" type="Array/string"><![CDATA[#{#string#IP Address#;#string#Select by network#;#string#IP Group#}#]]></p-qual>
        <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
      </p-param>
      <p-param name="AddExistingServerIPs">
        <desc><![CDATA[Add server by network]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#AddServers == "Select by network"]]></p-qual>
        <p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#AddServers != "Select by network"]]></p-qual>
      </p-param>
      <p-param name="IPGroup">
        <desc><![CDATA[Select IP group]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#AddServers=="IP Group"]]></p-qual>
        <p-qual kind="ognl" name="genericEnumeration" type="Array/string"><![CDATA[GetAction("com.vmware.avi","fetchObjectList").call( #controller , "ipaddrgroup" , #Tenant , "" , #version )]]></p-qual>
        <p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#AddServers!="IP Group"]]></p-qual>
      </p-param>
      <p-param name="PGNames">
        <desc><![CDATA[Search server networks to select servers within that networks:]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#AddExistingServerIPs == true ]]></p-qual>
        <p-qual kind="ognl" name="defaultValue" type="string"><![CDATA[""]]></p-qual>
        <p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#AddExistingServerIPs != true || #AddServers != "Select by network"]]></p-qual>
      </p-param>
      <p-param name="Network">
        <desc><![CDATA[Select server networks]]></desc>
        <p-qual kind="ognl" name="visible" type="boolean"><![CDATA[ #AddExistingServerIPs == true ]]></p-qual>
        <p-qual kind="ognl" name="genericEnumeration" type="Array/string"><![CDATA[GetAction("com.vmware.avi","fetchObjectList").call( #controller , "vimgrnwruntime" , #Tenant , #PGNames , #version )]]></p-qual>
        <p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#AddExistingServerIPs != true || #AddServers != "Select by network"]]></p-qual>
      </p-param>
      <p-param name="PoolServers">
        <desc><![CDATA[Select servers to add]]></desc>
        <p-qual kind="ognl" name="dataBinding" type="Array/CompositeType(IP:string,Ratio:string,Port:string):AVIServer"><![CDATA[GetAction("com.vmware.avi","fetchServerIP").call( #controller , #Tenant , #AddServers , #IPGroup , #Network , #AddExistingServerIPs )]]></p-qual>
      </p-param>
      <p-param name="serverType">
        <desc><![CDATA[Server type]]></desc>
        <p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
        <p-qual kind="static" name="defaultValue" type="string"><![CDATA[V4]]></p-qual>
      </p-param>
    </p-step>
  </presentation>
</workflow>