<?xml version="1.0" encoding="UTF-8"?>
<workflow xmlns="http://vmware.com/vco/workflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd"
	root-name="item1" object-name="workflow:name=generic"
	id="26e35159-76d5-4ae9-85e8-650384374e25" version="2.0.2"
	api-version="6.0.0" allowed-operations="vef" restartMode="1"
	resumeFromFailedMode="0">
	<display-name><![CDATA[Create pool using model]]></display-name>
	<position y="9.545454545454543" x="5.0"></position>
	<input>
		<param name="Name" type="string">
			<description><![CDATA[Add virtualservice name]]></description>
		</param>
		<param name="controller" type="string">
			<description><![CDATA[AVI Controller(AVI controller on which resources to be deployed).]]></description>
		</param>
		<param name="Tenant" type="string">
			<description><![CDATA[Select Tenant ]]></description>
		</param>
		<param name="ServerCloud" type="string">
			<description><![CDATA[Select Cloud Server Type]]></description>
		</param>
		<param name="PoolServers"
			type="Array/CompositeType(IP:string,Ratio:string,Port:string):AVIServer">
			<description><![CDATA[Server details]]></description>
		</param>
		<param name="CreateHealthMonitor" type="boolean">
			<description><![CDATA[Create HealthMonitor]]></description>
		</param>
		<param name="healthMonitor" type="Array/string">
			<description><![CDATA[Select the HealthMonitor]]></description>
		</param>
		<param name="AddServers" type="string">
			<description><![CDATA[How would you like to add Servers?]]></description>
		</param>
		<param name="IPGroup" type="string">
			<description><![CDATA[IP Group]]></description>
		</param>
		<param name="Network" type="string">
			<description><![CDATA[Type IP Address or Select by Network]]></description>
		</param>
		<param name="AddExistingServerIPs" type="boolean">
			<description><![CDATA[Check existing server IP]]></description>
		</param>
		<param name="PGNames" type="string">
			<description><![CDATA[Network PG names]]></description>
		</param>
		<param name="failActionType" type="string">
			<description><![CDATA[Failactiontype for poolgroup]]></description>
		</param>
		<param name="lbAlgorithm" type="string">
			<description><![CDATA[Pool LB algorithm type]]></description>
		</param>
		<param name="lbConsistentHash" type="string">
			<description><![CDATA[Load balancer consistent hash]]></description>
		</param>
		<param name="lbCustomHeaderName" type="string">
			<description><![CDATA[Load balancer custom header name]]></description>
		</param>
		<param name="serverType" type="string">
			<description><![CDATA[Server Type]]></description>
		</param>
		<param name="statusCode" type="string">
			<description><![CDATA[Status code for failaction type of poolgroup]]></description>
		</param>
		<param name="statusProtocol" type="string">
			<description><![CDATA[Protocol for failaction type of poolgroup]]></description>
		</param>
		<param name="failActionURL" type="string">
			<description><![CDATA[Redirect url for failaction type]]></description>
		</param>
		<param name="monitorType" type="string">
			<description><![CDATA[Healthmonitor type ]]></description>
		</param>
		<param name="Command" type="string">
			<description><![CDATA[Command code for  external type healthmonitor]]></description>
		</param>
		<param name="Request" type="string">
			<description><![CDATA[Command code for  UDP type healthmonitor]]></description>
		</param>
		<param name="selectExistingPools" type="boolean"></param>
		<param name="http_response_code" type="Array/string"></param>
		<param name="https_response_code" type="Array/string"></param>
	</input>
	<attrib name="configErrorCode" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
	</attrib>
	<attrib name="actionEerrorCode" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
	</attrib>
	<attrib name="HealthMonitorName" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
		<description><![CDATA[Set the healthmonitor name ]]></description>
	</attrib>
	<attrib name="version" type="string" read-only="false">
		<value encoded="n"><![CDATA[18.2.8]]></value>
		<description><![CDATA[AVI api version]]></description>
	</attrib>
	<attrib name="serverTimeout" type="number" read-only="false">
		<value encoded="n"><![CDATA[0.0]]></value>
	</attrib>
	<attrib name="requestQueueEnabled" type="boolean"
		read-only="false">
		<value encoded="n"><![CDATA[false]]></value>
	</attrib>
	<attrib name="domainName" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
	</attrib>
	<attrib name="sniEnabled" type="boolean" read-only="false">
		<value encoded="n"><![CDATA[false]]></value>
	</attrib>
	<attrib name="capacityEstimationThresh" type="number"
		read-only="false">
		<value encoded="n"><![CDATA[0.0]]></value>
	</attrib>
	<attrib name="hostCheckEnabled" type="boolean" read-only="false">
		<value encoded="n"><![CDATA[false]]></value>
	</attrib>
	<attrib name="maxConcurrentConnectionsPerServer" type="number"
		read-only="false">
		<value encoded="n"><![CDATA[0.0]]></value>
	</attrib>
	<attrib name="upstreamConnpoolConnMaxReuse" type="number"
		read-only="false">
		<value encoded="n"><![CDATA[0.0]]></value>
	</attrib>
	<attrib name="capacityEstimation" type="boolean"
		read-only="false">
		<value encoded="n"><![CDATA[false]]></value>
	</attrib>
	<attrib name="gracefulDisableTimeout" type="number"
		read-only="false">
		<value encoded="n"><![CDATA[10.0]]></value>
	</attrib>
	<attrib name="upstreamConnpoolConnIdleTmo" type="number"
		read-only="false">
		<value encoded="n"><![CDATA[0.0]]></value>
	</attrib>
	<attrib name="deleteServerRefresh" type="boolean"
		read-only="false">
		<value encoded="n"><![CDATA[false]]></value>
	</attrib>
	<attrib name="fewestTasksFeedbackDelay" type="number"
		read-only="false">
		<value encoded="n"><![CDATA[1.0]]></value>
	</attrib>
	<attrib name="cloudConfigCksum" type="string" read-only="false">
		<value encoded="n"><![CDATA[""]]></value>
	</attrib>
	<attrib name="connectionRampDuration" type="number"
		read-only="false">
		<value encoded="n"><![CDATA[0.0]]></value>
	</attrib>
	<attrib name="useServicePort" type="boolean" read-only="false">
		<value encoded="n"><![CDATA[false]]></value>
	</attrib>
	<attrib name="upstreamConnpoolConnLifeTmo" type="number"
		read-only="false">
		<value encoded="n"><![CDATA[0.0]]></value>
	</attrib>
	<attrib name="lookupServerByName" type="boolean"
		read-only="false">
		<value encoded="n"><![CDATA[false]]></value>
	</attrib>
	<attrib name="rewriteHostHeaderServerName" type="boolean"
		read-only="false">
		<value encoded="n"><![CDATA[false]]></value>
	</attrib>
	<attrib name="enableRealtimeMetrics" type="boolean"
		read-only="false">
		<value encoded="n"><![CDATA[false]]></value>
	</attrib>
	<attrib name="upstreamConnpoolServerMaxCache" type="number"
		read-only="false">
		<value encoded="n"><![CDATA[0.0]]></value>
	</attrib>
	<attrib name="description" type="string" read-only="false">
		<value encoded="n"><![CDATA[
		]]></value>
	</attrib>
	<attrib name="activePassiveHM" type="boolean" read-only="false">
		<value encoded="n"><![CDATA[false]]></value>
		<description><![CDATA[Active Passive healthmonitor]]></description>
	</attrib>
	<attrib name="aviVroClient" type="Avi:AviVroClient"
		read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<attrib name="defaultServerPort" type="string" read-only="false">
		<value encoded="n"><![CDATA[80]]></value>
		<description><![CDATA[Default server port for pool]]></description>
	</attrib>
	<attrib name="poolObject" type="Avi:Pool" read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<attrib name="enablePool" type="boolean" read-only="false">
		<value encoded="n"><![CDATA[false]]></value>
		<description><![CDATA[Pool status]]></description>
	</attrib>
	<attrib name="healthMonitorObj" type="Avi:HealthMonitor"
		read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<attrib name="healthMonitorUDPObj" type="Avi:HealthMonitorUdp"
		read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<attrib name="healthMonitorDNSObj" type="Avi:HealthMonitorDNS"
		read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<attrib name="healthMonitorExternalObj"
		type="Avi:HealthMonitorExternal" read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<attrib name="healthMonitorHTTPObj" type="Avi:HealthMonitorHttp"
		read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<attrib name="healthMonitorTCPObj" type="Avi:HealthMonitorTcp"
		read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<attrib name="sslMonitorObj"
		type="Avi:HealthMonitorSSLAttributes" read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<attrib name="is_federated" type="boolean" read-only="false">
		<value encoded="n"><![CDATA[false]]></value>
	</attrib>
	<attrib name="monitor_port" type="number" read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<attrib name="send_interval" type="number" read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<attrib name="successful_check" type="number" read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<attrib name="failed_check" type="number" read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<attrib name="tcp_response" type="string" read-only="false">
		<value encoded="n"><![CDATA[]]>
		</value>
	</attrib>
	<attrib name="tcp_half_open" type="boolean" read-only="false">
		<value encoded="n"><![CDATA[false]]></value>
	</attrib>
	<attrib name="maintenance_code" type="string" read-only="false">
		<value encoded="n"><![CDATA[]]>
		</value>
	</attrib>
	<attrib name="time_out" type="number" read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<attrib name="failActionHttpRedirectObject"
		type="Avi:FailActionHTTPRedirect" read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<attrib name="ipAddressObject" type="Avi:IpAddr"
		read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<attrib name="serverObject" type="Avi:Server" read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<attrib name="poolAnalyticsPolicy"
		type="Avi:PoolAnalyticsPolicy" read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<attrib name="failActionObject" type="Avi:FailAction"
		read-only="false">
		<value encoded="n"><![CDATA[__NULL__]]></value>
	</attrib>
	<workflow-item name="item0"
		throw-bind-name="actionEerrorCode" type="end" end-mode="0">
		<position y="9.045454545454543" x="804.5"></position>
	</workflow-item>
	<workflow-item name="item6" out-name="item3"
		throw-bind-name="configErrorCode" type="task">
		<display-name><![CDATA[AVIObjectName]]></display-name>
		<script encoded="false"><![CDATA[HealthMonitorName = Name+"_HealthMonitor"



]]></script>
		<in-binding>
			<bind name="Name" type="string" export-name="Name">
				<description><![CDATA[Add virtualservice name]]></description>
			</bind>
			<bind name="HealthMonitorName" type="string"
				export-name="HealthMonitorName"></bind>
		</in-binding>
		<out-binding>
			<bind name="HealthMonitorName" type="string"
				export-name="HealthMonitorName"></bind>
		</out-binding>
		<position y="19.045454545454543" x="244.5"></position>
	</workflow-item>
	<workflow-item name="item2" out-name="item0" type="task">
		<display-name><![CDATA[createObject]]></display-name>
		<script encoded="false"><![CDATA[resp = aviVroClient.executeWorkflow();
healthMonitorObj = Server.findForType('Avi:HealthMonitor', System.getObjectId(healthMonitorObj));
poolObject = Server.findForType('Avi:Pool', System.getObjectId(poolObject));
healthMonitorObj=resp[0];
poolObject=resp[1];
System.log("HM created successfully."+healthMonitorObj);
System.log("HM Name."+healthMonitorObj.getName());
System.log("Pool created successfully."+poolObject);
System.log("pool Name."+poolObject.getName());]]></script>
		<in-binding>
			<bind name="aviVroClient" type="Avi:AviVroClient"
				export-name="aviVroClient"></bind>
			<bind name="poolObject" type="Avi:Pool" export-name="poolObject"></bind>
			<bind name="healthMonitorObj" type="Avi:HealthMonitor"
				export-name="healthMonitorObj"></bind>
		</in-binding>
		<out-binding></out-binding>
		<position y="19.045454545454543" x="664.5"></position>
	</workflow-item>
	<workflow-item name="item1" out-name="item6" type="task"
		script-module="com.vmware.avi/getAviVroClient">
		<display-name><![CDATA[getAviVroClient]]></display-name>
		<script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.avi").getAviVroClient(controller) ;]]></script>
		<in-binding>
			<bind name="controller" type="string" export-name="controller">
				<description><![CDATA[Controller IP]]></description>
			</bind>
		</in-binding>
		<out-binding>
			<bind name="actionResult" type="Avi:AviVroClient"
				export-name="aviVroClient"></bind>
		</out-binding>
		<position y="19.545454545454543" x="105.0"></position>
	</workflow-item>
	<workflow-item name="item3" out-name="item4" type="task"
		script-module="com.vmware.avi/createHealthMonitorObj">
		<display-name><![CDATA[createHealthMonitorObj]]></display-name>
		<script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.avi").createHealthMonitorObj(healthMonitorObj,healthMonitorUDPObj,healthMonitorType,healthMonitorDNSObj,healthMonitorExternalObj,healthMonitorHTTPObj,healthMonitorTCPObj,sslMonitorObj,hm_type,hm_name,hm_description,is_federated,monitor_port,time_out,send_interval,successful_check,failed_check,command_code,udp_request,dns_query_name,http_response_code,tcp_request,tcp_response,tcp_half_open,maintenance_code,aviVroClient,https_response_code) ;]]></script>
		<in-binding>
			<bind name="healthMonitorObj" type="Avi:HealthMonitor"
				export-name="healthMonitorObj"></bind>
			<bind name="healthMonitorUDPObj" type="Avi:HealthMonitorUdp"
				export-name="healthMonitorUDPObj"></bind>
			<bind name="healthMonitorType" type="string"
				export-name="monitorType"></bind>
			<bind name="healthMonitorDNSObj" type="Avi:HealthMonitorDNS"
				export-name="healthMonitorDNSObj"></bind>
			<bind name="healthMonitorExternalObj"
				type="Avi:HealthMonitorExternal"
				export-name="healthMonitorExternalObj"></bind>
			<bind name="healthMonitorHTTPObj" type="Avi:HealthMonitorHttp"
				export-name="healthMonitorHTTPObj"></bind>
			<bind name="healthMonitorTCPObj" type="Avi:HealthMonitorTcp"
				export-name="healthMonitorTCPObj"></bind>
			<bind name="sslMonitorObj" type="Avi:HealthMonitorSSLAttributes"
				export-name="sslMonitorObj"></bind>
			<bind name="hm_type" type="string" export-name="monitorType"></bind>
			<bind name="hm_name" type="string"
				export-name="HealthMonitorName"></bind>
			<bind name="hm_description" type="string"
				export-name="description"></bind>
			<bind name="is_federated" type="boolean"
				export-name="is_federated"></bind>
			<bind name="monitor_port" type="number"
				export-name="monitor_port"></bind>
			<bind name="time_out" type="number" export-name="time_out"></bind>
			<bind name="send_interval" type="number"
				export-name="send_interval"></bind>
			<bind name="successful_check" type="number"
				export-name="successful_check"></bind>
			<bind name="failed_check" type="number"
				export-name="failed_check"></bind>
			<bind name="command_code" type="string" export-name="Command"></bind>
			<bind name="udp_request" type="string" export-name="Request"></bind>
			<bind name="dns_query_name" type="string" export-name="Name"></bind>
			<bind name="http_response_code" type="Array/string"
				export-name="http_response_code"></bind>
			<bind name="tcp_request" type="string" export-name="Request"></bind>
			<bind name="tcp_response" type="string"
				export-name="tcp_response"></bind>
			<bind name="tcp_half_open" type="boolean"
				export-name="tcp_half_open"></bind>
			<bind name="maintenance_code" type="string"
				export-name="maintenance_code"></bind>
			<bind name="aviVroClient" type="Avi:AviVroClient"
				export-name="aviVroClient"></bind>
			<bind name="https_response_code" type="Array/string"
				export-name="https_response_code"></bind>
		</in-binding>
		<out-binding>
			<bind name="actionResult" type="Avi:AviVroClient"
				export-name="aviVroClient"></bind>
		</out-binding>
		<position y="19.045454545454543" x="384.5"></position>
	</workflow-item>
	<workflow-item name="item4" out-name="item2" type="task"
		script-module="com.vmware.avi/createPoolObj">
		<display-name><![CDATA[createPoolObj]]></display-name>
		<script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.avi").createPoolObj(PoolServers,enablePool,CreateHealthMonitor,poolName,defaultServerPort,loadBalancerAlgo,serverType,lbConsistentHash,lbCustomHeaderName,ServerCloud,Tenant,HealthMonitorName,healthMonitor,Version,activePassiveHM,capacityEstimation,capacityEstimationThresh,cloudConfigCksum,deleteServerRefresh,gracefulDisableTimeout,hostCheckEnabled,lookupServerByName,rewriteHostHeaderServerName,maxConcurrentConnectionsPerServer,domainName,fewestTasksFeedbackDelay,connectionRampDuration,upstreamConnpoolConnIdleTmo,upstreamConnpoolConnLifeTmo,upstreamConnpoolConnMaxReuse,upstreamConnpoolServerMaxCache,requestQueueEnabled,useServicePort,sniEnabled,serverTimeout,enableRealtimeMetrics,statusCode,failActionURL,statusProtocol,failActiontype,aviVroClient,poolObject,failActionObject,failActionHttpRedirectObject,serverObject,poolAnalyticsPolicy,ipAddressObject) ;]]></script>
		<in-binding>
			<bind name="PoolServers"
				type="Array/CompositeType(IP:string,Ratio:string,Port:string):AVIServer"
				export-name="PoolServers">
				<description><![CDATA[Pool servers list ]]></description>
			</bind>
			<bind name="enablePool" type="boolean" export-name="enablePool">
				<description><![CDATA[Pool status]]></description>
			</bind>
			<bind name="CreateHealthMonitor" type="boolean"
				export-name="CreateHealthMonitor">
				<description><![CDATA[Check create healthmonitor or not]]></description>
			</bind>
			<bind name="poolName" type="string" export-name="Name">
				<description><![CDATA[Pool name]]></description>
			</bind>
			<bind name="defaultServerPort" type="string"
				export-name="defaultServerPort">
				<description><![CDATA[Default server port]]></description>
			</bind>
			<bind name="loadBalancerAlgo" type="string"
				export-name="lbAlgorithm">
				<description><![CDATA[Pool LB algorithm type]]></description>
			</bind>
			<bind name="serverType" type="string" export-name="serverType">
				<description><![CDATA[Server type]]></description>
			</bind>
			<bind name="lbConsistentHash" type="string"
				export-name="lbConsistentHash">
				<description><![CDATA[Consistent hash data for load balancer algorithm type is consistent hash]]></description>
			</bind>
			<bind name="lbCustomHeaderName" type="string"
				export-name="lbCustomHeaderName">
				<description><![CDATA[Custom headers consistent hash type]]></description>
			</bind>
			<bind name="ServerCloud" type="string" export-name="ServerCloud">
				<description><![CDATA[Servercloud name]]></description>
			</bind>
			<bind name="Tenant" type="string" export-name="Tenant">
				<description><![CDATA[Tenant name]]></description>
			</bind>
			<bind name="HealthMonitorName" type="string"
				export-name="HealthMonitorName">
				<description><![CDATA[New healthmonitor name]]></description>
			</bind>
			<bind name="healthMonitor" type="Array/string"
				export-name="healthMonitor">
				<description><![CDATA[List of existing healthmonitors name]]></description>
			</bind>
			<bind name="Version" type="string" export-name="version">
				<description><![CDATA[Avi api version]]></description>
			</bind>
			<bind name="activePassiveHM" type="boolean"
				export-name="activePassiveHM">
				<description><![CDATA[Active passive healthmonitor]]></description>
			</bind>
			<bind name="capacityEstimation" type="boolean"
				export-name="capacityEstimation">
				<description><![CDATA[Add capacity estimation]]></description>
			</bind>
			<bind name="capacityEstimationThresh" type="number"
				export-name="capacityEstimationThresh">
				<description><![CDATA[Add capacity estimation thresh]]></description>
			</bind>
			<bind name="cloudConfigCksum" type="string"
				export-name="cloudConfigCksum">
				<description><![CDATA[Add cloud config cksum ]]></description>
			</bind>
			<bind name="deleteServerRefresh" type="boolean"
				export-name="deleteServerRefresh">
				<description><![CDATA[Delete server on dns refresh]]></description>
			</bind>
			<bind name="gracefulDisableTimeout" type="number"
				export-name="gracefulDisableTimeout">
				<description><![CDATA[Add graceful disable timeout]]></description>
			</bind>
			<bind name="hostCheckEnabled" type="boolean"
				export-name="hostCheckEnabled">
				<description><![CDATA[Add host check enabled]]></description>
			</bind>
			<bind name="lookupServerByName" type="boolean"
				export-name="lookupServerByName">
				<description><![CDATA[Add lookup server by name]]></description>
			</bind>
			<bind name="rewriteHostHeaderServerName" type="boolean"
				export-name="rewriteHostHeaderServerName">
				<description><![CDATA[Add rewrite host header server name]]></description>
			</bind>
			<bind name="maxConcurrentConnectionsPerServer" type="number"
				export-name="maxConcurrentConnectionsPerServer">
				<description><![CDATA[Add max concurrent connections per server]]></description>
			</bind>
			<bind name="domainName" type="string" export-name="domainName">
				<description><![CDATA[Add domain name]]></description>
			</bind>
			<bind name="fewestTasksFeedbackDelay" type="number"
				export-name="fewestTasksFeedbackDelay">
				<description><![CDATA[Add fewest tasks feedback delay]]></description>
			</bind>
			<bind name="connectionRampDuration" type="number"
				export-name="connectionRampDuration">
				<description><![CDATA[Connection ramp]]></description>
			</bind>
			<bind name="upstreamConnpoolConnIdleTmo" type="number"
				export-name="upstreamConnpoolConnIdleTmo">
				<description><![CDATA[Connection Idle Timeout]]></description>
			</bind>
			<bind name="upstreamConnpoolConnLifeTmo" type="number"
				export-name="upstreamConnpoolConnLifeTmo">
				<description><![CDATA[Connection Life Timeout]]></description>
			</bind>
			<bind name="upstreamConnpoolConnMaxReuse" type="number"
				export-name="upstreamConnpoolConnMaxReuse">
				<description><![CDATA[Connection Max Used Times]]></description>
			</bind>
			<bind name="upstreamConnpoolServerMaxCache" type="number"
				export-name="upstreamConnpoolServerMaxCache">
				<description><![CDATA[Max Cache Connections Per Server]]></description>
			</bind>
			<bind name="requestQueueEnabled" type="boolean"
				export-name="requestQueueEnabled">
				<description><![CDATA[Add request queue enabled]]></description>
			</bind>
			<bind name="useServicePort" type="boolean"
				export-name="useServicePort">
				<description><![CDATA[Disable Port Translation]]></description>
			</bind>
			<bind name="sniEnabled" type="boolean" export-name="sniEnabled">
				<description><![CDATA[Add sni enabled]]></description>
			</bind>
			<bind name="serverTimeout" type="number"
				export-name="serverTimeout">
				<description><![CDATA[Default Server Timeout]]></description>
			</bind>
			<bind name="enableRealtimeMetrics" type="boolean"
				export-name="enableRealtimeMetrics">
				<description><![CDATA[Enable real time metrics]]></description>
			</bind>
			<bind name="statusCode" type="string" export-name="statusCode">
				<description><![CDATA[Status code for fail action type of pool]]></description>
			</bind>
			<bind name="failActionURL" type="string"
				export-name="failActionURL">
				<description><![CDATA[Redirect url for fail action type of pool]]></description>
			</bind>
			<bind name="statusProtocol" type="string"
				export-name="statusProtocol">
				<description><![CDATA[Add status protocol for pool fail action]]></description>
			</bind>
			<bind name="failActiontype" type="string"
				export-name="failActionType">
				<description><![CDATA[Pool fail action type]]></description>
			</bind>
			<bind name="aviVroClient" type="Avi:AviVroClient"
				export-name="aviVroClient">
				<description><![CDATA[Object of the plugin]]></description>
			</bind>
			<bind name="poolObject" type="Avi:Pool" export-name="poolObject"></bind>
			<bind name="failActionHttpRedirectObject"
				type="Avi:FailActionHTTPRedirect"
				export-name="failActionHttpRedirectObject"></bind>
			<bind name="ipAddressObject" type="Avi:IpAddr"
				export-name="ipAddressObject"></bind>
			<bind name="serverObject" type="Avi:Server"
				export-name="serverObject"></bind>
			<bind name="poolAnalyticsPolicy" type="Avi:PoolAnalyticsPolicy"
				export-name="poolAnalyticsPolicy"></bind>
			<bind name="failActionObject" type="Avi:FailAction"
				export-name="failActionObject"></bind>
		</in-binding>
		<out-binding>
			<bind name="actionResult" type="Avi:AviVroClient"
				export-name="aviVroClient"></bind>
		</out-binding>
		<position y="19.045454545454543" x="524.5"></position>
	</workflow-item>
	<presentation>
		<p-step>
			<title><![CDATA[Basic details]]></title>
			<p-param name="controller">
				<desc><![CDATA[AVI controller]]></desc>
				<p-qual kind="ognl" name="genericEnumeration"
					type="Array/string"><![CDATA[GetAction("com.vmware.avi","getVROControllerList").call()]]></p-qual>
			</p-param>
			<p-param name="Tenant">
				<desc><![CDATA[Select tenant ]]></desc>
				<p-qual kind="static" name="defaultValue" type="string"><![CDATA[admin]]></p-qual>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
			</p-param>
			<p-param name="ServerCloud">
				<desc><![CDATA[Select cloud]]></desc>
				<p-qual kind="ognl" name="genericEnumeration"
					type="Array/string"><![CDATA[GetAction("com.vmware.avi","getExistingObjectsWithController").call( #controller , "cloud" )]]></p-qual>
			</p-param>
		</p-step>
		<p-step>
			<title><![CDATA[Pool details]]></title>
			<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#selectExistingPools != true]]></p-qual>
			<p-param name="Name">
				<desc><![CDATA[Pool name]]></desc>
				<p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
			</p-param>
			<p-param name="lbAlgorithm">
				<desc><![CDATA[Select pool LB algorithm]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#poolOrPoolgrous != true]]></p-qual>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#Least Connections#;#string#Round Robin#;#string#Least Load#;#string#Fewest Servers#;#string#Consistent Hash#;#string#Fastest Response#;#string#Core Affinity#}#]]></p-qual>
				<p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.avi","readvROResourceElements").call( "lbAlgorithm" , #ApplicationProfile , #resourceElement )]]></p-qual>
			</p-param>
			<p-param name="lbConsistentHash">
				<desc><![CDATA[Load balancer consistent hash]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#lbAlgorithm == "Consistent Hash "]]></p-qual>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#Source IP Address #;#string#Source IP Address And Port #;#string#Callid#;#string#URI #;#string#Custom String#;#string#Custom Header#}#]]></p-qual>
			</p-param>
			<p-param name="lbCustomHeaderName">
				<desc><![CDATA[Load balancer custom header name]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#lbConsistentHash == "Custom Header"]]></p-qual>
			</p-param>
			<p-param name="CreateHealthMonitor">
				<desc><![CDATA[Create healthmonitor]]></desc>
				<p-qual kind="static" name="defaultValue" type="boolean"><![CDATA[false]]></p-qual>
			</p-param>
			<p-param name="healthMonitor">
				<desc><![CDATA[Select healthmonitors]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#CreateHealthMonitor == false]]></p-qual>
				<p-qual kind="ognl" name="genericEnumeration"
					type="Array/string"><![CDATA[GetAction("com.vmware.avi","fetchObjectsNames").call( #controller , "healthmonitor" , "" , #Tenant )]]></p-qual>
			</p-param>
		</p-step>
		<p-step>
			<title><![CDATA[Healthmonitor details]]></title>
			<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#CreateHealthMonitor == true]]></p-qual>
			<p-param name="monitorType">
				<desc><![CDATA[Healthmonitor type ]]></desc>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#TCP#;#string#HTTPS#;#string#External#;#string#UDP#;#string#DNS#;#string#HTTP#;#string#Ping#}#]]></p-qual>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#CreateHealthMonitor==true ]]></p-qual>
			</p-param>
			<p-param name="Command">
				<desc><![CDATA[Command code for  external type healthmonitor]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#monitorType=="External"]]></p-qual>
			</p-param>
			<p-param name="Request">
				<desc><![CDATA[Command code for  UDP type healthmonitor]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#monitorType=="UDP"]]></p-qual>
			</p-param>
			<p-param name="http_response_code">
				<desc><![CDATA[Respose code for HTTP type healthmonitor]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#monitorType=="HTTPS" || #monitorType=="HTTP"]]></p-qual>
			</p-param>
			<p-param name="https_response_code">
				<desc><![CDATA[https_response_code]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#monitorType=="HTTPS"]]></p-qual>
			</p-param>
		</p-step>
		<p-step>
			<title><![CDATA[Server details]]></title>
			<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#selectExistingPools == true]]></p-qual>
			<p-param name="AddServers">
				<desc><![CDATA[Connect servers]]></desc>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#IP Address#;#string#Select by network#;#string#IP Group#}#]]></p-qual>
				<p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
			</p-param>
			<p-param name="AddExistingServerIPs">
				<desc><![CDATA[Add server by network]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#AddServers == "Select by network"]]></p-qual>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#AddServers != "Select by network"]]></p-qual>
			</p-param>
			<p-param name="IPGroup">
				<desc><![CDATA[Select IP group]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#AddServers=="IP Group"]]></p-qual>
				<p-qual kind="ognl" name="genericEnumeration"
					type="Array/string"><![CDATA[GetAction("com.vmware.avi","fetchObjectList").call( #controller , "ipaddrgroup" , #Tenant , "" , #version )]]></p-qual>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#AddServers!="IP Group"]]></p-qual>
			</p-param>
			<p-param name="PGNames">
				<desc><![CDATA[Search server networks to select servers within that networks:]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#AddExistingServerIPs == true ]]></p-qual>
				<p-qual kind="ognl" name="defaultValue" type="string"><![CDATA[""]]></p-qual>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#AddExistingServerIPs != true || #AddServers != "Select by network"]]></p-qual>
			</p-param>
			<p-param name="Network">
				<desc><![CDATA[Select server networks]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[ #AddExistingServerIPs == true ]]></p-qual>
				<p-qual kind="ognl" name="genericEnumeration"
					type="Array/string"><![CDATA[GetAction("com.vmware.avi","fetchObjectList").call( #controller , "vimgrnwruntime" , #Tenant , #PGNames , #version )]]></p-qual>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[#AddExistingServerIPs != true || #AddServers != "Select by network"]]></p-qual>
			</p-param>
			<p-param name="PoolServers">
				<desc><![CDATA[Select servers to add]]></desc>
				<p-qual kind="ognl" name="dataBinding"
					type="Array/CompositeType(IP:string,Ratio:string,Port:string):AVIServer"><![CDATA[GetAction("com.vmware.avi","fetchServerIP").call( #controller , #Tenant , #AddServers , #IPGroup , #Network , #AddExistingServerIPs )]]></p-qual>
			</p-param>
			<p-param name="serverType">
				<desc><![CDATA[Server type]]></desc>
				<p-qual kind="ognl" name="notVisible" type="boolean"><![CDATA[true]]></p-qual>
				<p-qual kind="static" name="defaultValue" type="string"><![CDATA[V4]]></p-qual>
			</p-param>
		</p-step>
		<p-step>
			<title><![CDATA[PG details]]></title>
			<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[false]]></p-qual>
			<p-param name="failActionType">
				<desc><![CDATA[Fail action type]]></desc>
				<p-qual kind="ognl" name="dataBinding" type="string"><![CDATA[GetAction("com.vmware.avi","readvROResourceElements").call( "failActionType" , #ApplicationProfile , #resourceElement )]]></p-qual>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#Close Connection#;#string#HTTP Redirect#}#]]></p-qual>
			</p-param>
			<p-param name="statusCode">
				<desc><![CDATA[Select status code]]></desc>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#301#;#string#302#;#string#307#}#]]></p-qual>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#failActionType=="HTTP Redirect"]]></p-qual>
			</p-param>
			<p-param name="statusProtocol">
				<desc><![CDATA[Add protocol]]></desc>
				<p-qual kind="static" name="genericEnumeration"
					type="Array/string"><![CDATA[#{#string#HTTP#;#string#HTTPS#}#]]></p-qual>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#failActionType=="HTTP Redirect"]]></p-qual>
			</p-param>
			<p-param name="failActionURL">
				<desc><![CDATA[URL for redirect]]></desc>
				<p-qual kind="ognl" name="visible" type="boolean"><![CDATA[#failActionType=="HTTP Redirect"]]></p-qual>
			</p-param>
			<p-param name="selectExistingPools">
				<desc><![CDATA[Select existing pools]]></desc>
				<p-qual kind="static" name="defaultValue" type="boolean"><![CDATA[false]]></p-qual>
			</p-param>
		</p-step>
	</presentation>
</workflow>