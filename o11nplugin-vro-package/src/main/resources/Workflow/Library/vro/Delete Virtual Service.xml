<?xml version="1.0" encoding="UTF-8"?>
<workflow xmlns="http://vmware.com/vco/workflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd"
	root-name="item1" object-name="workflow:name=generic"
	id="dc90c217-aabf-4453-8376-3323a9671dc7" version="3.0.1"
	api-version="6.0.0" allowed-operations="vef" restartMode="1"
	resumeFromFailedMode="0">
	<display-name><![CDATA[Delete Virtual Service]]></display-name>
	<position y="50.0" x="100.0"></position>
	<input>
		<param name="virtual_service_object" type="Avi:VirtualService">
			<description><![CDATA[virtual_service_object]]></description>
		</param>
	</input>
	<workflow-item name="item0" type="end" end-mode="0">
		<position y="45.40909090909091" x="664.5"></position>
	</workflow-item>
	<workflow-item name="item1" out-name="item0" type="task">
		<display-name><![CDATA[Scriptable task]]></display-name>
		<script encoded="false"><![CDATA[/*************************************************************
* This script deletes Virtual service dependent objects.     *
*                                                            *
**************************************************************/
var url=virtualServiceObject.getUrl();
var controller=url.substring(url.indexOf("//")+2, url.indexOf("/api"));
vroClientArray=Server.findAllForType('Avi:AviVroClient','');
var workflowRuntime = new AviWorkflowRuntime();
//System.log("controller :"+controller);
for each(vroClient in vroClientArray){
		if(vroClient !=null){
		vroController=vroClient.cred.controller;
		if(vroController==controller){
		workflowRuntime.setAviVroClient(vroClient);
		}
	}	
}
try{
	if(workflowRuntime.getAviVroClient() !=null)
	{		
		workflowRuntime.getAviVroClient().deleteObject(virtualServiceObject, workflowRuntime.getWorkflowId());
		var vsVipref=virtualServiceObject.getVsvipRef();
		if(vsVipref!=null){
			var vsVipUUID = vsVipref.substring(vsVipref.indexOf('vsvip-'),vsVipref.indexOf('#'));
			workflowRuntime.getAviVroClient().deleteObjectByUUID('vsvip',vsVipUUID);
		}
		var poolref=virtualServiceObject.getPoolRef();	
		if(poolref!=null){
			var poolUUID = poolref.substring(poolref.indexOf('pool-'),poolref.indexOf('#'));
			workflowRuntime.getAviVroClient().deleteObjectByUUID('pool',poolUUID,workflowRuntime.getWorkflowId())
			var poolObject = new AviPool() ;
			poolObject=workflowRuntime.getAviVroClient().getObjectByUUID("pool",poolUUID, workflowRuntime.getWorkflowId());
			var hmArray=poolObject.getHealthMonitorRefs();
			if(hmArray!=null){
				for (i=0; i<=hmArray.length-1; i++){
					var HealthMonitor_ref = hmArray[i];
					var hmRef=virtualServiceObject.getName()+"_HealthMonitor";
					if((HealthMonitor_ref.indexOf(hmRef))!=-1){
						var hmUuid =HealthMonitor_ref.substring(HealthMonitor_ref.indexOf("/healthmonitor-")+1, HealthMonitor_ref.indexOf("#"));
						workflowRuntime.getAviVroClient().deleteObjectByUUID('healthmonitor',hmUuid, workflowRuntime.getWorkflowId());
		
						}
					}
				}
		}
		var poolgroupref=virtualServiceObject.getPoolGroupRef();
		if(poolgroupref!=null){
			var poolGroupUUID = poolgroupref.substring(poolgroupref.indexOf('poolgroup-'),poolgroupref.indexOf('#'));
			workflowRuntime.getAviVroClient().deleteObjectByUUID('poolgroup',poolGroupUUID, workflowRuntime.getWorkflowId())
			var poolGroupObject = new AviPoolGroup() ;
			poolGroupObject=workflowRuntime.getAviVroClient().getObjectByUUID("poolgroup",poolGroupUUID, workflowRuntime.getWorkflowId());
			var poolArray=poolGroupObject.getMembers();
			if(poolArray!=null){
				for (i=0; i<=poolArray.length-1; i++){
					var poolMemberObject = new AviPoolGroupMember() ;
					poolMemberObject = poolArray[i];
					poolref=poolMemberObject.getPoolRef();
					if(poolref!=null){
						var poolUUID = poolref.substring(poolref.indexOf('pool-'),poolref.indexOf('#'));
						workflowRuntime.getAviVroClient().deleteObjectByUUID('pool',poolUUID, workflowRuntime.getWorkflowId());
						}
					}
					if(poolref!=null){
					var poolUUID = poolref.substring(poolref.indexOf('pool-'),poolref.indexOf('#'));
					var poolObject = new AviPool() ;
					poolObject=workflowRuntime.getAviVroClient().getObjectByUUID("pool",poolUUID, workflowRuntime.getWorkflowId());
					var hmArray=poolObject.getHealthMonitorRefs();
					if(hmArray!=null){
						for (i=0; i<=hmArray.length-1; i++){
							var HealthMonitor_ref = hmArray[i];
							var hmRef=virtualServiceObject.getName()+"_HealthMonitor";
							if((HealthMonitor_ref.indexOf(hmRef))!=-1){
								var hmUuid =HealthMonitor_ref.substring(HealthMonitor_ref.indexOf("/healthmonitor-")+1, HealthMonitor_ref.indexOf("#"));aviVroClient.deleteObjectByUUID('healthmonitor',hmUuid);
							}
						}
					}
				}
			}
		}
		workflowRuntime.getAviVroClient().executeWorkflow(workflowRuntime.getWorkflowId());
		System.log("Vs deleted successfully.");
	}
}catch(e){
	System.log("Error occured while deleting object : "+e)
}
]]></script>
		<in-binding>
			<bind name="virtualServiceObject" type="Avi:VirtualService"
				export-name="virtual_service_object"></bind>
		</in-binding>
		<out-binding></out-binding>
		<position y="55.40909090909091" x="304.5"></position>
	</workflow-item>
	<presentation>
		<p-step>
			<title><![CDATA[Object list]]></title>
			<p-param name="virtual_service_object">
				<desc><![CDATA[virtual_service_object]]></desc>
			</p-param>
		</p-step>
	</presentation>
</workflow>