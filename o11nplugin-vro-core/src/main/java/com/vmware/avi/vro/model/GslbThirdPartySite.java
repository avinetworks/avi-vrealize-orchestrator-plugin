package com.vmware.avi.vro.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.vmware.avi.vro.model.GslbGeoLocation;
import com.vmware.avi.vro.model.GslbHealthMonitorProxy;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.springframework.validation.annotation.Validated;
import javax.validation.Valid;
import javax.validation.constraints.*;
import com.vmware.o11n.plugin.sdk.annotation.VsoFinder;
import com.vmware.o11n.plugin.sdk.annotation.VsoMethod;
import com.vmware.o11n.plugin.sdk.annotation.VsoObject;
import com.vmware.avi.vro.Constants;
import org.springframework.stereotype.Service;
/**
 * GslbThirdPartySite
 */
@Validated
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-05-07T17:09:16.137+05:30")

@VsoObject(create = false, name = "GslbThirdPartySite")
@VsoFinder(name = Constants.FINDER_VRO_GSLBTHIRDPARTYSITE, idAccessor = "getObjectID()")
@Service
public class GslbThirdPartySite extends AviRestResource  {
  @JsonProperty("cluster_uuid")
  private String clusterUuid = null;

  @JsonProperty("enabled")
  private Boolean enabled = true;

  @JsonProperty("hm_proxies")
  @Valid
  private List<GslbHealthMonitorProxy> hmProxies = null;

  @JsonProperty("location")
  private GslbGeoLocation location = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("ratio")
  private Integer ratio = null;

  @JsonProperty("uuid")
  private String uuid = null;

  
  /**
   * Third-party-site identifier generated by Avi. Field introduced in 17.1.1.
   * @return clusterUuid
  **/
  @ApiModelProperty(readOnly = true, value = "Third-party-site identifier generated by Avi. Field introduced in 17.1.1.")


 
  @VsoMethod  
  public String getClusterUuid() {
    return clusterUuid;
  }
    
  @VsoMethod
  public void setClusterUuid(String clusterUuid) {
    this.clusterUuid = clusterUuid;
  }

  
  /**
   * Enable or disable the third-party Site.  This is useful in maintenance scenarios such as upgrade and routine maintenance. A disabled site's configuration shall be retained  but it will not get any new configuration updates.   VIPs associated with the disabled site shall not be sent in DNS response. . Field introduced in 17.1.1.
   * @return enabled
  **/
  @ApiModelProperty(value = "Enable or disable the third-party Site.  This is useful in maintenance scenarios such as upgrade and routine maintenance. A disabled site's configuration shall be retained  but it will not get any new configuration updates.   VIPs associated with the disabled site shall not be sent in DNS response. . Field introduced in 17.1.1.")


 
  @VsoMethod  
  public Boolean isEnabled() {
    return enabled;
  }
    
  @VsoMethod
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  
  public GslbThirdPartySite addHmProxiesItem(GslbHealthMonitorProxy hmProxiesItem) {
    if (this.hmProxies == null) {
      this.hmProxies = new ArrayList<GslbHealthMonitorProxy>();
    }
    this.hmProxies.add(hmProxiesItem);
    return this;
  }
  
  /**
   * User can designate certain Avi sites to run health monitor probes for VIPs/VS(es) for this site. This is useful in network deployments where the VIPs/VS(es) are reachable only from certain sites. A typical scenario is a firewall between two GSLB sites. User may want to run health monitor probes from sites on either side of the firewall so that each designated site can derive a datapath view of the reachable members. If the health monitor proxies are not configured, then the default behavior is to run health monitor probes from all the active sites. Field introduced in 17.1.1.
   * @return hmProxies
  **/
  @ApiModelProperty(value = "User can designate certain Avi sites to run health monitor probes for VIPs/VS(es) for this site. This is useful in network deployments where the VIPs/VS(es) are reachable only from certain sites. A typical scenario is a firewall between two GSLB sites. User may want to run health monitor probes from sites on either side of the firewall so that each designated site can derive a datapath view of the reachable members. If the health monitor proxies are not configured, then the default behavior is to run health monitor probes from all the active sites. Field introduced in 17.1.1.")

  @Valid

 
  @VsoMethod  
  public List<GslbHealthMonitorProxy> getHmProxies() {
    return hmProxies;
  }
    
  @VsoMethod
  public void setHmProxies(List<GslbHealthMonitorProxy> hmProxies) {
    this.hmProxies = hmProxies;
  }

  
  /**
   * Geographic location of the site. Field introduced in 17.1.1.
   * @return location
  **/
  @ApiModelProperty(value = "Geographic location of the site. Field introduced in 17.1.1.")

  @Valid

 
  @VsoMethod  
  public GslbGeoLocation getLocation() {
    return location;
  }
    
  @VsoMethod
  public void setLocation(GslbGeoLocation location) {
    this.location = location;
  }

  
  /**
   * Name of the third-party Site. Field introduced in 17.1.1.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Name of the third-party Site. Field introduced in 17.1.1.")
  @NotNull


 
  @VsoMethod  
  public String getName() {
    return name;
  }
    
  @VsoMethod
  public void setName(String name) {
    this.name = name;
  }

  
  /**
   * User can overide the individual GslbPoolMember ratio for all the VIPs of this site. If this field is not configured, then the GslbPoolMember ratio gets applied. . Allowed values are 1-20. Field introduced in 17.1.1.
   * @return ratio
  **/
  @ApiModelProperty(value = "User can overide the individual GslbPoolMember ratio for all the VIPs of this site. If this field is not configured, then the GslbPoolMember ratio gets applied. . Allowed values are 1-20. Field introduced in 17.1.1.")


 
  @VsoMethod  
  public Integer getRatio() {
    return ratio;
  }
    
  @VsoMethod
  public void setRatio(Integer ratio) {
    this.ratio = ratio;
  }

  
  /**
   * This field is used as a key in the datastore for the GslbThirdPartySite table to encapsulate site-related info. . Field introduced in 17.2.5.
   * @return uuid
  **/
  @ApiModelProperty(value = "This field is used as a key in the datastore for the GslbThirdPartySite table to encapsulate site-related info. . Field introduced in 17.2.5.")


 
  @VsoMethod  
  public String getUuid() {
    return uuid;
  }
    
  @VsoMethod
  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  
  public String getObjectID() {
		return "GslbThirdPartySite";
  }

  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GslbThirdPartySite gslbThirdPartySite = (GslbThirdPartySite) o;
    return Objects.equals(this.clusterUuid, gslbThirdPartySite.clusterUuid) &&
        Objects.equals(this.enabled, gslbThirdPartySite.enabled) &&
        Objects.equals(this.hmProxies, gslbThirdPartySite.hmProxies) &&
        Objects.equals(this.location, gslbThirdPartySite.location) &&
        Objects.equals(this.name, gslbThirdPartySite.name) &&
        Objects.equals(this.ratio, gslbThirdPartySite.ratio) &&
        Objects.equals(this.uuid, gslbThirdPartySite.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterUuid, enabled, hmProxies, location, name, ratio, uuid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GslbThirdPartySite {\n");
    
    sb.append("    clusterUuid: ").append(toIndentedString(clusterUuid)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    hmProxies: ").append(toIndentedString(hmProxies)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ratio: ").append(toIndentedString(ratio)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

